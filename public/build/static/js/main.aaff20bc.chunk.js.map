{"version":3,"sources":["serviceWorker.js","container/User/Logout/index.js","container/BaseLayout/NewsHeader/Nav.js","container/until.js","container/User/Login/index.js","container/User/Register/index.js","container/User/index.js","container/BaseLayout/NewsHeader/index.js","container/BaseLayout/NewsFooter/index.js","container/BaseLayout/index.js","container/Index/IndexTab/index.js","container/component/ImgBlockTypeOne/index.js","container/Index/IndexLeft/index.js","container/Index/IndexBottom/index.js","container/Index/IndexRight/index.js","container/Index/index.js","container/Article/index.js","container/Forum/index.js","container/Detail/index.js","container/Share/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","Logout","props","useContext","Text","userName","logoutClick","log","className","type","onClick","Nav","mode","selectedKeys","current","style","background","menuItemClick","Item","key","icon","AppstoreOutlined","to","Tools","api","url","args","callback","argsStr","substr","length","fetch","response","json","res","time","parseInt","Date","toJSON","replace","bind","host","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setModalVisable","loginclick","name","initialValues","remember","onFinish","values","account","password","code","warn","success","userLogin","msg","userId","id","userAvatar","avatar","onFinishFailed","errorInfo","label","rules","required","Password","valuePropName","htmlType","height","Icon","SmileOutlined","marginRight","text","uploadButton","Register","useState","setAvatar","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","a","preview","originFileObj","passwordFirst","passwordSecond","data","action","listType","onPreview","onChange","beforeUpload","formData","FormData","append","method","body","img","visible","footer","onCancel","alt","width","src","User","handleCancel","title","onOk","TabPane","tab","createContext","NewsHeader","setCurrent","modalVisable","localStorage","setUserName","href","Provider","value","e","Footer","Layout","NewsFooter","textAlign","Content","BaseLayout","padding","renderRoutes","route","children","Tabs","IndexTab","news","setNews","useEffect","showData","listData","i","JSON","parse","push","uniquekey","List","newsList","map","newsItem","index","target","defaultActiveKey","ImgBlockTypeOne","wenzhangType","count","thumbnail_pic_s","author_name","componentType","imageWidth","ImageWidth","realtype","cartTitle","bordered","marginTop","justifyContent","newsImage","IndexLeft","autoplay","IndexBottom","IndexRight","Index","HOST","zhuge","identify","track","IconText","Article","dataList","setDataList","subtitle","description","content","itemLayout","size","pagination","page","pageSize","dataSource","renderItem","item","actions","extra","Meta","Forum","initLoading","setInitLoading","loading","setLoading","rawData","setRawData","setListData","setTimeout","tempData","concat","onLoadMore","Array","margin","loadMore","ineHeight","active","TextArea","Input","CommentList","comments","header","Editor","onSubmit","submitting","rows","Detail","setComments","setSubmitting","setValue","setData","document","getElementsByClassName","display","params","getCommentData","handleData","pid","showCommentData","author","datatime","create_time","marginBottom","comment","user_id","insertCommentData","Option","Select","shareReducer","state","initState","Routes","path","component","exact","useReducer","dispatch","changeType","selectChange","changeInput","handleChange","submit","warning","stringify","Group","showHeader","defaultValue","showWenzhangType","titleWarn","subtile","subtitleWarn","congtentWarn","imgLength","Button","placeholder","autoSize","minRows","maxRows","block","showform","history","createHashHistory","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aaff20bc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useContext,useState, useEffect } from 'react';\r\nimport './index.scss';\r\nimport {Text} from '../../BaseLayout/NewsHeader/index';\r\nimport { Button} from 'antd';\r\n\r\n//注销组件\r\nconst Logout = props => {\r\n    //引入父组件的上下文方法\r\n    const {userName,logoutClick} = useContext(Text);\r\n    console.log(logoutClick);\r\n    console.log(props.userName);\r\n    return (\r\n        <div className='logout'>\r\n            <Button type='primary'>{userName}</Button>\r\n            &nbsp;&nbsp;\r\n            <Button type='ghost' onClick={logoutClick}>注销用户</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, { useContext,useState, useEffect } from 'react';\r\nimport {Text} from './index';\r\nimport {Menu} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Logout from '../../User/Logout/index';\r\nimport { AppstoreOutlined } from '@ant-design/icons';\r\nimport './index.scss';\r\n\r\n\r\n//建立导航\r\nconst Nav = props =>{\r\n    const {userName} = useContext(Text);\r\n    //定义icon\r\n    const userShow = ()=>{\r\n        \r\n        if(userName){\r\n            //说明已经登录\r\n            return(\r\n                <Menu.Item key=\"logout\">\r\n                    <Logout />\r\n                </Menu.Item> \r\n            )\r\n        }else{\r\n            //说明没有登录\r\n            return(\r\n                <Menu.Item key=\"user\" icon={<AppstoreOutlined />}>\r\n                    注册/登录\r\n                </Menu.Item>\r\n            )\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Menu className='nav' mode=\"horizontal\" selectedKeys={[props.current] }\r\n                style={{background: '#f0f2f5'}}\r\n                onClick={props.menuItemClick}\r\n                >\r\n            <Menu.Item key=\"index\" icon={<AppstoreOutlined />}>\r\n                <Link to='/index'>\r\n                    主页\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"article\" icon={<AppstoreOutlined />}>\r\n                <Link to='/article'>\r\n                   文章\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"forum\" icon={<AppstoreOutlined />}>\r\n                <Link to='/forum'>\r\n                    论坛\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"share\" icon={<AppstoreOutlined />}>\r\n                <Link to='/share'>\r\n                    分享\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            {userShow()}\r\n        </Menu>\r\n    );\r\n};\r\nexport default Nav;","var Tools = {\r\n    // fetch接口封装\r\n    api: function({ url, args='', callback }) {\r\n        let argsStr = '';\r\n        if(args!='') {\r\n            for(let key in args) {\r\n                argsStr += key + '=' + args[key] + '&';\r\n            }\r\n            argsStr = '?' + argsStr.substr(0, argsStr.length-1);\r\n        }\r\n        \r\n        fetch(url+argsStr)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            callback(res);\r\n        });\r\n    },\r\n    /**\r\n     * zyx\r\n     * 2019/10.22\r\n     * 时间戳转时间‘YYYY-MM-DD HH:mm:ss’\r\n     */\r\n    time : function(time){\r\n        //从数据库拿出来的时间戳是字符串形式 需要转化为数字\r\n        time = parseInt(time);\r\n        // 增加8小时\r\n        let date = new Date(time + 8 * 3600 * 1000); \r\n        return date.toJSON().substr(0, 19).replace('T', ' ');\r\n        //Date的‘toJSON’方法返回格林威治时间的JSON格式字符串，实际是使用‘toISOString’方法的结果。\r\n        //字符串形如‘2018-08-09T10:20:54.396Z’，转化为北京时间需要额外增加八个时区，\r\n        //我们需要取字符串前19位，然后把‘T’替换为空格，即是我们需要的时间格式。\r\n    }\r\n}\r\n\r\nexport const api = Tools.api.bind(Tools);\r\n//host 请求地址\r\nexport const host = 'http://182.92.64.245/tp5/public/index.php/index/index/';\r\nexport const time = Tools.time.bind(Tools);","import React, {useContext, useState, useEffect } from 'react';\r\nimport {Text} from '../../BaseLayout/NewsHeader';\r\nimport { Form, Input, Button, Checkbox, message} from 'antd';\r\nimport {api,host} from '../../until';\r\n\r\n//表单的布局 账号密码输入框的布局\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n//表单的布局 下面记住我和确定注册的布局\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n  \r\nconst Login = props => {\r\n\r\n    //使用父组件中这个上下文provider的value变量和方法\r\n    //setModalVisable设置弹窗关闭 loginclick登录成功\r\n    const  {setModalVisable,loginclick} = useContext(Text);\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        let {account,password} = values;\r\n        //登录判断 数据库判单是否有这个账号密码 如果有返回这个用户的全部数据\r\n        api({\r\n            url:host +'newsLogin',\r\n            args: {\r\n                account,\r\n                password,\r\n            },\r\n            callback: (res) => {\r\n                if(res.code == '401'){\r\n                    message.warn(\"登录失败，该账户不存在\");\r\n                    return 0;\r\n                }else if(res.code == '402'){\r\n                    message.warn(\"登录失败，密码错误\");\r\n                    return 0;\r\n                }else{\r\n                    message.success(\"登录成功\");\r\n                    let userLogin = {userName: res.msg[0].name, userId: res.msg[0].id,userAvatar:res.msg[0].avatar};\r\n                    //调用上下文的方法\r\n                    //登录成功保存用户数据\r\n                    loginclick(userLogin);\r\n                    //设置模态框消失\r\n                    setModalVisable(false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    \r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    \r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Account\"\r\n                name=\"account\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your account!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{height:'40px'}}>\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nexport default Login;","import React, {useContext, useState, useEffect } from 'react';\r\nimport {Text} from '../../BaseLayout/NewsHeader';\r\nimport { Form, Input, Button, message, Upload, Modal} from 'antd';\r\n//antd v4升级后 拿不到以前的Icon了 换成了SmileOutlined\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport {api,host} from '../../until';\r\n\r\n//定义icon\r\nconst Icon = props => (\r\n    <span>\r\n        <SmileOutlined type={props.type} style={{ marginRight: 8 }} />\r\n        {props.text}\r\n    </span>\r\n);\r\n\r\n\r\n//表单的布局 账号密码输入框的布局\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n//表单的布局 下面记住我和确定注册的布局\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst uploadButton = (\r\n    <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n);\r\n\r\nconst Register = props => { \r\n    //使用父组件中这个上下文provider的value变量和方法\r\n    //setModalVisable设置弹窗关闭 loginclick登录成功\r\n    const {setModalVisable,loginclick} = useContext(Text);\r\n\r\n    const [avatar,setAvatar] = useState('');//用户上传的头像\r\n    const [previewVisible,setPreviewVisible] = useState(false);//上传头像的弹窗\r\n    const [previewImage,setPreviewImage] = useState('');//预览头像的链接\r\n    const [fileList,setFileList] = useState([]);//用户上传的图片列表 这里只让传一张\r\n\r\n    //form表单点击确定成功的时候\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        //取出表单内的值\r\n        let {account,name,passwordFirst,passwordSecond} = values;\r\n        if(passwordFirst !== passwordSecond){\r\n            message.warn('两次密码输入不一致');\r\n            return 0;\r\n        }\r\n        //如果用户没设置头像提示他去设置头像\r\n        if(!avatar){\r\n            message.warn('请设置头像');\r\n            return 0;\r\n        }\r\n\r\n        //请求注册接口\r\n        api({\r\n            url:host +'newsCreateUser',\r\n            args: {\r\n                name,\r\n                account,\r\n                password:passwordFirst,\r\n                avatar\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                if(res.code == '400'){\r\n                    message.warn(\"注册失败，该账户已存在\");\r\n                }else{\r\n                    message.success(\"注册成功,并为您自动登录\");\r\n                    let id  = res.data[0].id;\r\n                    let userLogin = {userName: name, userId: id,userAvatar:avatar};\r\n                    //调用上下文的方法\r\n                    //注册成功自动为用户登录\r\n                    loginclick(userLogin);\r\n                    //设置模态框消失\r\n                    setModalVisable(false);\r\n                }\r\n            }\r\n        });\r\n        \r\n    };\r\n    //form表单点击确定失败的时候 (通过表单绑定的验证没有通过)\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    //把图片转为base64\r\n    const getBase64 = (file)=>{\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    //关闭上传图片的弹窗\r\n    const handleCancel = ()=>{\r\n        setPreviewVisible(false);\r\n    }\r\n\r\n    //预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n          file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        //修改状态\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    //上传图片\r\n    const handleChange = ({ fileList }) => setFileList(fileList);\r\n    \r\n    /**\r\n\t * zyx\r\n\t * 2019.10.21\r\n\t * 上传文件之前的钩子，参数为上传的文件\r\n\t */\r\n\tconst beforeUpload = (file) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\tfetch('http://182.92.64.245/tp5/public/index.php/index/index/savaImgToOss', {\r\n\t\t\tmethod:'post',\r\n\t\t\tbody: formData\r\n\t\t}).then(response => response.json())\r\n\t\t.catch(error => console.error('Error:', error))\r\n\t\t.then(response => {\r\n            let img = response.msg;\r\n            //设置头像地址\r\n            setAvatar(img);\r\n\t\t})\r\n    }\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入您的昵称',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Account\"\r\n                name=\"account\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入您的账号',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"密码\"\r\n                name=\"passwordFirst\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入您的密码',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"确认密码\"\r\n                name=\"passwordSecond\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请再次输入您的密码',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item \r\n                label=\"头像\"\r\n            >\r\n                <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={handlePreview}\r\n                    onChange={handleChange}\r\n                    beforeUpload = {beforeUpload}\r\n                    >\r\n                        {fileList.length >= 1 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{height:'40px'}}>\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nexport default Register;","import React, {useContext, useState, useEffect } from 'react';\r\n//需要把上下文也引入\r\nimport {Text} from '../BaseLayout/NewsHeader';\r\nimport {Tabs, Modal} from 'antd';\r\nimport Login from './Login/index';\r\nimport Register from './Register'\r\n//注册登录的模块的父组件 用于弹出注册登录模块\r\nconst User = props => { \r\n    //使用父组件中这个上下文provider的value变量和方法\r\n    const  {setModalVisable} = useContext(Text);\r\n     //调用父组件的关闭弹窗方法\r\n    const handleCancel = ()=>{\r\n        setModalVisable(false);\r\n    }\r\n   \r\n    return (\r\n        <Modal \r\n            title=\"用户中心\" \r\n            visible={props.visible} \r\n            onCancel={handleCancel}\r\n            onOk={handleCancel} \r\n            footer={null}\r\n        >\r\n            <Tabs type=\"card\">\r\n                <Tabs.TabPane tab='登录' key='1'>\r\n                    <Login />\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane tab='注册' key='2'>\r\n                    <Register />\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    )\r\n}\r\nexport default User;","import React, { useState, useEffect ,createContext } from 'react';\r\nimport { Row ,Col } from 'antd';\r\n//引入导航\r\nimport Nav from './Nav';\r\n//引入注册和登录模块的弹窗组件\r\nimport User from '../../User/index';\r\nimport './index.scss';\r\n\r\n//创建一个上下文并且这个上下文还需要导出\r\n//使用useContextHook 因为我们的注册登录组件是header组件的孙子组件 \r\n//如果想调用header组件定义的方法 需要层层嵌套所以这里使用上下文去传递方法\r\nexport const Text = createContext();\r\nconst NewsHeader = ()=> {\r\n\r\n    //导航切换 current参数\r\n    const [current,setCurrent] = useState('mail');\r\n    //注册登录的弹窗 默认不弹出\r\n    const [modalVisable,setModalVisable] = useState(false);\r\n    //1是为了传递用户名 2是为了判断是否登录修改登录状态\r\n    const [userName,setUserName] = useState(localStorage.userName)\r\n    //点击切换 修改current\r\n    const handleClick = e => {\r\n        //点击注册登录的位置 直接弹窗 然后把那个链接设为高亮\r\n        if(e.key == 'user'){\r\n            setCurrent('user');\r\n            //弹出弹窗\r\n            setModalVisable(true);\r\n        }\r\n        setCurrent(e.key)\r\n    };\r\n\r\n    //点击登录表单中的登录按钮,成功后保存用户信息\r\n    const loginclick = (userLogin) => {\r\n        localStorage.userName = userLogin.userName;\r\n        localStorage.userId = userLogin.userId;\r\n        localStorage.userAvatar = userLogin.userAvatar;\r\n        //修改登录状态为1\r\n        setUserName(userLogin.userName);\r\n    }\r\n\r\n    //登出的方法 点击退出登录把全部登录信息删除\r\n    const logoutClick = ()=>{\r\n        localStorage.userName = '';\r\n        localStorage.userId = '';\r\n        localStorage.userAvatar = '';\r\n        //修改登录状态为0\r\n        setUserName('');\r\n    }\r\n\r\n    return(\r\n        <div className='new-header'>\r\n            <header>\r\n                <Row>\r\n                    <Col span={2}></Col>\r\n                    <Col span={4}>\r\n                        <a className='logo' href='/'>\r\n                            <img src='https://1978246522-max.oss-cn-hangzhou.aliyuncs.com/logo.png' alt='logo'/>\r\n                            <span>新闻</span>\r\n                        </a>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Text.Provider value = {{userName,logoutClick}}> \r\n                            <Nav \r\n                                current = {current}\r\n                                menuItemClick = {handleClick}\r\n                            />\r\n                        </Text.Provider>  \r\n                        {/* 被这个Provider包裹的全部子组件孙子组件都可以使用value传递的上下文参数 */}\r\n                        {/* 传递一个设置弹窗关闭的方法 和一个登录成功保存用户数据的方法 */}\r\n                        <Text.Provider value = {{setModalVisable,loginclick}}> \r\n                            {/* 登录注册的弹窗 */}\r\n                            <User\r\n                                visible = {modalVisable}\r\n                            />\r\n\t\t\t\t\t\t</Text.Provider>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsHeader;","import React, { useState, useEffect } from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst NewsFooter = props=> {\r\n    return(\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            News Web ©2020 Created by ZYX\r\n        </Footer>\r\n    )\r\n}\r\nexport default NewsFooter;","import React, { useState, useEffect } from 'react';\r\nimport NewsHeader from './NewsHeader/index';\r\nimport NewsFooter from './NewsFooter/index';\r\n//引入renderRoutes\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Layout } from 'antd';\r\nimport './index.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst BaseLayout = props => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <NewsHeader />\r\n            <Content style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-content\">\r\n                    {renderRoutes(props.route.children)}\r\n                </div>\r\n            </Content>\r\n            <NewsFooter /> \r\n        </Layout>\r\n    )\r\n}\r\nexport default BaseLayout;","import React, { useState, useEffect } from 'react';\r\nimport {Tabs} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {host,api} from '../../until';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst IndexTab = props => {\r\n    const callback = (key)=>{\r\n        console.log(key);\r\n    }\r\n\r\n    //定义渲染需要使用的数据\r\n    const [news,setNews] =useState([]);\r\n     //组件加载时调用 相当于componsetNewsentDidMount \r\n     useEffect(()=>{\r\n        //动态获取数据 根据传入得type\r\n        let wenzhangType = props.type;\r\n        /**\r\n         * zyx\r\n         * 2020/6/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                showData(res);\r\n            }\r\n        });    \r\n    },[])\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/9\r\n     * 数据处理函数\r\n     */\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                uniquekey: data[i].id,\r\n                title: data[i].title,\r\n            });\r\n        }\r\n        //调用news的change方法\r\n        setNews(listData)\r\n    }\r\n\r\n    const List = ()=>{\r\n        console.log(news);\r\n       \r\n        let newsList=news.map((newsItem, index) => (\r\n            <li key={index}>\r\n                 <Link to={`details/${newsItem.uniquekey}`} target='_blank'>\r\n                     {newsItem.title}\r\n                 </Link>\r\n             </li>\r\n        ));\r\n        return(\r\n            <ul>\r\n                {newsList}\r\n            </ul>\r\n        )\r\n    }\r\n    return (\r\n       <div>\r\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                <TabPane tab=\"热点文章\" key=\"1\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"热点帖子\" key=\"2\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"国际新闻\" key=\"3\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"国内新闻\" key=\"4\">\r\n                    <List />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexTab;","import React, { useState, useEffect } from 'react';\r\nimport {Card} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//引入封装的fetch方法和host地址\r\nimport {api,host} from '../../until';\r\nimport './index.scss';\r\n\r\n//外层组件 处理数据\r\nconst ImgBlockTypeOne = props => {\r\n\r\n     //定义需要渲染使用state\r\n     const [news,setNews] = useState('');\r\n\r\n     //组件加载时调用 相当于componentDidMount \r\n    useEffect(()=>{\r\n        //动态获取数据 根据传入得type\r\n        let wenzhangType = props.type;\r\n        /**\r\n         * zyx\r\n         * 2020/6/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n                wenzhangType,\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                showData(res);\r\n            }\r\n        });    \r\n    },[])\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/9\r\n     * 数据处理函数\r\n     */\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        for (let i = 0; i < props.count; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                uniquekey: data[i].id,\r\n                thumbnail_pic_s: img[0],\r\n                title: data[i].title,\r\n                author_name: data[i].name,\r\n            });\r\n        }\r\n\r\n        //调用news的change方法\r\n        setNews(listData)\r\n    }\r\n \r\n    //根据数据渲染页面\r\n    const newsImage = ()=>{\r\n        if(news.length){\r\n            let newsList = '';\r\n            if(props.componentType == 1){\r\n                newsList=news.map((newsItem, index) => (\r\n                    <div key={index} className='image_news_item' style={{width:props.imageWidth}}>\r\n                        <Link to={`details/${newsItem.uniquekey}`} target='_blank'>\r\n                            <img alt=\"newsItem.title\" src={newsItem.thumbnail_pic_s} width={props.imageWidth}/>\r\n                            <h3>{newsItem.title}</h3>\r\n                            <p>{newsItem.author_name}</p>\r\n                        </Link>\r\n                    </div>\r\n                ));\r\n\r\n            }else if (props.componentType == 2){\r\n                newsList=news.map((newsItem,index)=>(\r\n                    <Link to={`details/${newsItem.uniquekey}`} target='_blank' key={index}>\r\n                        <section  className='imageSingle_sec' style={{width:props.width}}>\r\n                            <div className='imageSingle_left' style={{width:props.ImageWidth}}>\r\n                                <img style={{width:props.ImageWidth}} src={newsItem.thumbnail_pic_s} alt={newsItem.title}/>\r\n                            </div>\r\n        \r\n                            <div className='imageSingle_right'>\r\n                                <p>{newsItem.title}</p>\r\n                                <span className='realType' >{newsItem.realtype}</span>\r\n                                <span>{newsItem.author_name}</span>\r\n                            </div>\r\n                        </section>\r\n                    </Link>\r\n                ));\r\n            }\r\n             \r\n            return(\r\n                <Card className={props.componentType == '2' ? 'imageSingleCard':'image_card'} title={props.cartTitle} bordered={true} style={{width:props.width,marginTop:'10px'}}>\r\n                    <div className='image_news_container' style={{width:props.width,justifyContent:props.justifyContent}}>\r\n                        {newsList}\r\n                    </div>\r\n                </Card>\r\n            )\r\n        }else{\r\n            return '正在加载'\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className='pc_news_imgblock'>\r\n            {newsImage()}\r\n        </div>\r\n    )\r\n}\r\nexport default ImgBlockTypeOne;","import React, { useState, useEffect } from 'react';\r\nimport {Carousel} from 'antd';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexLeft = props => {\r\n    \r\n    return (\r\n       <div>\r\n           <Carousel autoplay>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news1.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news2.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news3.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news4.jpg\"/></div>\r\n            </Carousel>\r\n            <ImgBlockTypeOne  count={10} type='4' width='100%' imageWidth='112px'\r\n             cartTitle='美国大暴动' justifyContent='space-around' componentType='1'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexLeft;","import React, { useState, useEffect } from 'react';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexBottom = props => {\r\n    \r\n    return (\r\n       <div>\r\n            <ImgBlockTypeOne count={12} type='2' width='100%' imageWidth='112px' cartTitle='R.I.P Kobe'\r\n            justifyContent='space-start' componentType='1'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexBottom;","import React, { useState, useEffect } from 'react';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexRight = props => {\r\n    \r\n    return (\r\n       <div>\r\n            <ImgBlockTypeOne width='100%' ImageWidth='100px' type='3' count={5} cartTitle='海贼王' componentType='2'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexRight;","/* global getCLodop:false */ \r\n/* global CLODOP:false */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Row, Col} from 'antd';\r\n//新闻列表组件\r\nimport IndexTab from './IndexTab/index';\r\n//主页左边内容 轮播图和新闻图文列表\r\nimport IndexLeft from './IndexLeft/index'\r\n//主页底部新闻列表\r\nimport IndexBottom from './IndexBottom/index';\r\n//主页右侧新闻列表\r\nimport IndexRight from './IndexRight/index';\r\nimport './index.scss';\r\n\r\nconst Index = props => {\r\n\r\n    useEffect(()=>{\r\n        //测试全局变量\r\n        /* eslint-disable no-undef */\r\n        console.log('测试全局变量');\r\n        console.log(HOST);\r\n        /* eslint-disable no-new */\r\n\r\n        //测试埋点 \r\n        console.log('我要测试埋点');\r\n        let {userName,userId,userAvatar} = localStorage;\r\n        console.log(userName);\r\n        zhuge.identify(userId, {\r\n            name: userName,\r\n            avatar: userAvatar,\r\n        });\r\n\r\n        zhuge.track('进入主页');\r\n        zhuge.track('进入主页', {\r\n            //属性名称不能超过255个字符，属性值不能超过200个字符\r\n            '手机' : '小米4',\r\n            '价格' : 1799,//数值型属性不要带引号\r\n            '运营商' : '移动'\r\n        });   \r\n    },[])\r\n    \r\n    return (\r\n        <div className='index'>\r\n        <Row>\r\n            <Col span={2}/>\r\n            <Col span={21}>\r\n                <Row className='top_news'>\r\n                    <Col span={8}>\r\n                        <div className='top_left top'>\r\n                        {/* 主页左边内容 轮播图和新闻图文列表 */}\r\n                            <IndexLeft />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={7}>\r\n                        <div className='top_center top'>\r\n                            {/* 中间tab组件 */}\r\n                            <IndexTab />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <div className='top_right top'>\r\n                            {/* 主页右侧新闻列表 */}\r\n                            <IndexRight />\r\n                        </div>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    <div className='bottom'>\r\n                        {/* 主页底部新闻列表 */}\r\n                        <IndexBottom />     \r\n                    </div>\r\n                </Row>\r\n\r\n            </Col>\r\n            <Col span={4}/>\r\n        </Row>\r\n        </div>\r\n    );\r\n}\r\nexport default Index;","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { List, Avatar} from 'antd';\r\n//antd v4升级后 拿不到以前的Icon了 换成了SmileOutlined\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport {api,host} from '../until';\r\nimport './index.scss';\r\n\r\n//定义icon\r\nconst IconText = props => (\r\n    <span>\r\n        <SmileOutlined type={props.type} style={{ marginRight: 8 }} />\r\n        {props.text}\r\n    </span>\r\n);\r\n\r\nconst Article = props => {\r\n    //需要渲染的数据\r\n    const [dataList,setDataList] = useState([]);\r\n    //组件加载时调用 相当于componsetNewsentDidMount \r\n    useEffect(()=>{\r\n        //拿到数据\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                showData(res);\r\n            }\r\n        });\r\n    },[])\r\n\r\n  \r\n    //处理数据\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                id: data[i].id,\r\n                title: data[i].title + '：' +data[i].subtitle,\r\n                avatar: data[i].avatar,\r\n                description: data[i].title + '：' +data[i].subtitle,\r\n                content:data[i].content,\r\n                img,\r\n            });\r\n        }\r\n        //修改数据\r\n        setDataList(listData);\r\n    }\r\n\r\n    return (\r\n        <div className='Article'>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    onChange: page => {\r\n                        console.log(page);\r\n                    },\r\n                    pageSize: 5,\r\n                }}\r\n                dataSource={dataList}\r\n                renderItem={item => (\r\n                    <Link to={`details/${item.id}`} target='_blank'>\r\n                        <List.Item\r\n                            key={item.title}\r\n                            actions={[\r\n                            <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\r\n                            <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\r\n                            <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\r\n                            ]}\r\n                            extra={ <img width={272} alt=\"logo\" src={item.img[0]}/>}\r\n                        >\r\n                        <List.Item.Meta\r\n                            avatar= {<Avatar src={item.avatar} />}\r\n                            description= {item.description}\r\n                        />\r\n                            {item.content}\r\n                        </List.Item>\r\n                        \r\n                    </Link>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Article;","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { List, Avatar,Row,Col,Button,Skeleton} from 'antd';\r\n//antd v4升级后 拿不到以前的Icon了 换成了SmileOutlined\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport {api,host} from '../until';\r\nimport './index.scss';\r\n\r\n//定义icon\r\nconst IconText = props => (\r\n    <span>\r\n        <SmileOutlined type={props.type} style={{ marginRight: 8 }} />\r\n        {props.text}\r\n    </span>\r\n);\r\n\r\nconst Forum = props => {\r\n    const [initLoading,setInitLoading] = useState(true);//页面初始化loading\r\n    const [loading,setLoading] = useState(false);//每次点击加载更多loading\r\n    const [rawData,setRawData] = useState([]);//请求拿到的数据\r\n    const [listData,setListData] = useState([]);//渲染到页面上的全部数据\r\n\r\n    //组件加载时调用 相当于componsetNewsentDidMount \r\n    useEffect(()=>{\r\n         //拿到数据\r\n        setTimeout(()=>{\r\n            api({\r\n                url:host + 'newsSelectContentByType',\r\n                args: {\r\n                    type:2,\r\n                },\r\n                callback: (res) => {\r\n                    //处理拿到的数据并渲染\r\n                    showData(res);\r\n                    //初始化的loading设为false\r\n                    setInitLoading(false);\r\n                }\r\n            });\r\n        },1)\r\n    },[])\r\n\r\n    //处理数据\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        //这里先只取三个数据\r\n        for (let i = 0; i < 3; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                id: data[i].id,\r\n                title: data[i].title + '：' +data[i].subtitle,\r\n                avatar: data[i].avatar,\r\n                description: data[i].title + '：' +data[i].subtitle,\r\n                content:data[i].content,\r\n                img,\r\n            });\r\n        }\r\n        let tempData = rawData.concat(listData);\r\n        //修改数据\r\n        setRawData(tempData);\r\n        setListData(tempData);\r\n        setLoading(false);\r\n    }\r\n\r\n    //点击加载更多触发\r\n    const onLoadMore = () => {\r\n        //设置loading\r\n        setLoading(true);\r\n        //设一个loading动画 先渲染空数据\r\n        setListData(listData.concat([...new Array(3)].map(() => ({ loading: true, name: {} ,img:[,,,]}))))\r\n        console.log(loading);\r\n        //因为这里拿数据很快 所以做一个暂停的动画展示\r\n        setTimeout(()=>{\r\n            //这里没有传入页数和要拿的数据数量 因为我把后端做的很简单 每次把全部数据直接拿过来 然后我在拼接三条上去\r\n            //真实情况每次触发需要page+1 然后把要请求page和每页的数量传入服务器 其实和后端实现和分页是没有区别的\r\n            api({\r\n                url:host + 'newsSelectContentByType',\r\n                args: {\r\n                    type:2,\r\n                },\r\n                callback: (res) => {\r\n                    //处理拿到的数据并渲染\r\n                    showData(res);\r\n                }\r\n            });\r\n        },1500)\r\n        \r\n    };\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/16\r\n     * 点击更多按钮的渲染\r\n     */\r\n    const loadMore = ()=>{\r\n        if(!initLoading && !loading){\r\n            return (\r\n                <div style={{ textAlign: 'center', marginTop: 12, height: 32, ineHeight: '32px', }}>\r\n                    <Button onClick={onLoadMore}>点击加载更多</Button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='forum' style={{margin:\"30px 100px\"}}>\r\n            <List\r\n                loading={initLoading}\r\n                itemLayout=\"horizontal\"\r\n                loadMore={loadMore()}\r\n                size=\"large\"\r\n                dataSource={listData}\r\n                renderItem={item => (\r\n                    <Link to={`details/${item.id}`} target='_blank'>\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item\r\n                                key={item.title}\r\n                                actions={[\r\n                                    <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\r\n                                    <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\r\n                                    <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\r\n                                ]}\r\n                            >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={item.avatar} />}\r\n                                description={item.description}\r\n                                />\r\n                                {item.content}\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col span={6}> \r\n                                            <img width={272} alt=\"logo\" src={item.img[0]} />\r\n                                        </Col>\r\n                                        <Col span={6}> \r\n                                            <img width={272} alt=\"logo\" src={item.img[1]} />\r\n                                        </Col>\r\n                                        <Col span={6}> \r\n                                            <img  width={272} alt=\"logo\" src={item.img[2]} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </List.Item>\r\n                        </Skeleton>\r\n                    </Link>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Forum;","import React, {useState, useEffect } from 'react';\r\nimport './index.scss';\r\nimport { Comment, Avatar, Form, Button, List, Input, message } from 'antd';\r\nimport {api,host} from '../until';\r\nconst { TextArea } = Input;\r\n\r\n//输入评论列表\r\nconst CommentList = ({ comments }) => (\r\n    <List\r\n        dataSource={comments}\r\n        header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={props => <Comment {...props} />}\r\n    />\r\n);\r\n//输入评论框\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n    <div>\r\n        <Form.Item>\r\n            <TextArea rows={4} onChange={onChange} value={value} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n                Add Comment\r\n            </Button>\r\n        </Form.Item>\r\n    </div>\r\n);\r\n\r\n//拿出来当前登录用户的数据\r\nconst {userId,userName,userAvatar } = localStorage;\r\n\r\n//文章和帖子的详情页面\r\nconst Detail = props => {\r\n\r\n    const [comments,setComments] = useState([]);//全部的评论内容\r\n    const [submitting,setSubmitting] = useState(false);//点击评论提交\r\n    const [value,setValue] = useState('');//提交的评论内容\r\n    const [data,setData] = useState({});//文章或是帖子的详情内容\r\n    \r\n    //componentDidmount\r\n    useEffect(()=>{\r\n        //把页面导航去掉\r\n        let nav = document.getElementsByClassName('nav');\r\n        nav[0].style.display='none';\r\n        //拿到帖子数据\r\n        console.log(props);\r\n        let id = props.match.params.uniquekey;\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                id,\r\n            },\r\n            callback: (res) => {\r\n                showData(res);\r\n            }\r\n        });\r\n        getCommentData();\r\n    },[])\r\n\r\n     /**\r\n     * zyx\r\n     * 2020/6/28\r\n     * 处理数据文章数据\r\n     */\r\n    const showData = (data)=>{\r\n        //临时存放数据\r\n        let handleData = {};\r\n        handleData.content =data[0].content;\r\n        setData(handleData)\r\n    }\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/18\r\n     * 拿评论数据\r\n     */\r\n    const getCommentData = ()=>{\r\n        let pid = props.match.params.uniquekey;\r\n        api({\r\n            url:host + 'newsSelectAllComment',\r\n            args: {\r\n                pid,\r\n            },\r\n            callback: (res) => {\r\n                showCommentData(res);\r\n            }\r\n        });\r\n    }\r\n\r\n     /**\r\n     * zyx\r\n     * 2020/6/18\r\n     * 处理评论数据\r\n     */\r\n    const showCommentData = (data) =>{\r\n        let tempData = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            tempData.push({\r\n                id: data[i].id,\r\n                author: data[i].name,\r\n                avatar: data[i].avatar,\r\n                content: data[i].content,\r\n                datatime:data[i].create_time,\r\n            });\r\n        }\r\n\r\n        setComments(tempData);\r\n    }\r\n\r\n\r\n    //插入文章评论\r\n    const insertCommentData = ()=>{\r\n        let pid = props.match.params.uniquekey;\r\n        let comment = value;\r\n        if(!userId){\r\n            message.warn(\"请先登录\");\r\n            return 0;\r\n        }\r\n        api({\r\n            url:host + 'newsInsertComment',\r\n            args: {\r\n                user_id:userId,\r\n                pid,\r\n                content:comment,\r\n            },\r\n            callback: (res) => {\r\n                getCommentData();\r\n                setSubmitting(false);\r\n                setValue('')\r\n            }\r\n        });\r\n    }\r\n\r\n    //点击提交评论\r\n    const handleSubmit = () => {\r\n        if (!value) {\r\n            return;\r\n        }\r\n        setSubmitting(true);\r\n        //动画暂停\r\n        setTimeout(() => {\r\n            insertCommentData();\r\n        }, 1000);\r\n    };\r\n    \r\n    //评论框内容填写\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='detail'>\r\n                <div style={{marginBottom:'30px'}}>\r\n                    {data.content}\r\n                </div>\r\n                {comments.length > 0 && <CommentList comments={comments} />}\r\n                <Comment\r\n                    avatar={\r\n                        <Avatar\r\n                        src={userAvatar}\r\n                        alt={userName}\r\n                        />\r\n                    }\r\n                    content={\r\n                        <Editor\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                        submitting={submitting}\r\n                        value={value}\r\n                        />\r\n                    }\r\n                />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Detail;","import React, {useReducer,useState, useEffect } from 'react';\r\nimport './index.scss';\r\nimport {Button,Input,Row,Col,Upload,Modal,Select,message} from 'antd';\r\n//antd v4升级后 拿不到以前的Icon了 换成了SmileOutlined\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport {api,host} from '../until';\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\n//定义icon\r\nconst Icon = props => (\r\n    <span>\r\n        <SmileOutlined type={props.type} />\r\n        {props.text}\r\n    </span>\r\n);\r\n\r\n//图片转base64\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n//单独抽出reducer方法\r\nfunction shareReducer(state, action) {\r\n    switch(action.type) {\r\n        case 'CHANGE_TYPE':\r\n            return {\r\n                ...state,\r\n                title:'',\r\n                subtitle:'',\r\n                content:'',\r\n                img:[],\r\n                previewVisible: false,\r\n                previewImage: '',\r\n                fileList: [],\r\n                type:action.data.type\r\n            }\r\n        case 'SET_WENZHANG_TYPE':\r\n            return{\r\n                ...state,\r\n                wenzhangType:action.data.wenzhangType,\r\n            }\r\n        case 'SET_INPUT_VALUE':\r\n            return{\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case 'HANDLE_CANCEL':\r\n            return{\r\n                ...state,\r\n                previewVisible:action.data.previewVisible,\r\n            }\r\n        case 'HANDLE_PREVIEW':\r\n            return{\r\n                ...state,\r\n                previewVisible: true,\r\n                previewImage:action.data.previewImage,\r\n            }\r\n        case 'HANDLE_CHNAGE':\r\n            return{\r\n                ...state,\r\n                fileList:action.data.fileList\r\n            }\r\n        case 'BEFORE_UPLOAD':\r\n            return{\r\n                ...state,\r\n                img:action.data.img\r\n            }\r\n        case 'SUBMIT_SUC':\r\n            return{\r\n                ...state,\r\n                title:'',//标题\r\n                subtitle:'',//大纲\r\n                content:'',//内容\r\n                img:[],//图片\r\n                previewVisible: false,\r\n                previewImage: '',\r\n                fileList: [],\r\n                wenzhangType:1,//文章类别选择框，默认为第一个\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//初始化state的参数\r\nconst initState = {\r\n    type:1,//本页面展示内容全部根据type切换\r\n    title:'',//标题\r\n    subtitle:'',//大纲\r\n    content:'',//内容\r\n    img:[],//图片\r\n    previewVisible: false,//预览图片的弹窗\r\n    previewImage: '',//预览的图片\r\n    fileList: [],//上传的图片列表\r\n    wenzhangType:1,//文章类别选择框，默认为第一个\r\n}\r\n\r\n//文章和帖子的详情页面\r\nconst Share = props => {\r\n    //通过使用useReducer代替useState,统一管理share组件下的全部状态 \r\n    //不再单独定义每一个状态还有每个状态改变的触发函数 通过initState统一定义 通过reducer统一处理\r\n    const [state, dispatch] = useReducer(shareReducer, initState);\r\n\r\n    //切换导航 上传文章和上传帖子的切换\r\n    const changeType = (type)=>{\r\n        dispatch({\r\n            type:'CHANGE_TYPE',\r\n            data:{\r\n                type,\r\n            }\r\n        })\r\n    }\r\n\r\n    //根据type展示header\r\n    const showHeader =()=>{\r\n        let {type} = state;\r\n        if(type == 1){\r\n            return (\r\n                <Button.Group size='large'>\r\n                    <Button type=\"primary\" onClick ={()=>{changeType(1)}}>\r\n                        <Icon type=\"left\" />\r\n                        发布文章\r\n                    </Button>\r\n                    <Button type=\"normal\" onClick ={()=>{changeType(2)}}>\r\n                        分布帖子\r\n                        <Icon type=\"right\" />\r\n                    </Button>\r\n                </Button.Group>\r\n            )\r\n        }else if(type == 2){\r\n            return (\r\n                <Button.Group size='large'>\r\n                    <Button type=\"normal\" onClick ={()=>{changeType(1)}}>\r\n                        <Icon type=\"left\" />\r\n                        发布文章\r\n                    </Button>\r\n                    <Button type=\"primary\" onClick ={()=>{changeType(2)}}>\r\n                        分布帖子\r\n                        <Icon type=\"right\" />\r\n                    </Button>\r\n                </Button.Group>\r\n            )\r\n        }\r\n    }\r\n\r\n    //type1 展示发表文章得表单 type2展示发表帖子得表单\r\n    const showform = ()=>{\r\n        //上传按钮\r\n        const { previewVisible, previewImage, fileList } = state;\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        //分类处理\r\n        let {type} = state;\r\n        let content = {}\r\n        //文章和帖子的提示内容不同\r\n        if(type == 1){\r\n           content.title = '文章标题';\r\n           content.titleWarn = '请输入文章标题';\r\n           content.subtile = '文章大纲';\r\n           content.subtitleWarn = '请输入文章大纲';\r\n           content.content = '文章内容';\r\n           content.congtentWarn = '请输入文章内容';\r\n           content.img = '文章图片'\r\n           content.imgLength = 1;\r\n           content.Button = '发表文章';\r\n        }else if(type == 2){\r\n            content.title = '帖子标题';\r\n            content.titleWarn = '请输入帖子标题';\r\n            content.subtile = '帖子类别';\r\n            content.subtitleWarn ='请输入帖子类别';\r\n            content.content = '帖子内容';\r\n            content.congtentWarn = '请输入帖子内容';\r\n            content.img = '帖子图片'\r\n            content.imgLength = 3;\r\n            content.Button = '发表帖子';\r\n        }\r\n\r\n        return(\r\n           <div>\r\n                <Row className ='item-img'>\r\n                    <Col span={4}>{content.img}</Col>\r\n                    <Col span={20} >\r\n                        <Upload\r\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                            listType=\"picture-card\"\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                            beforeUpload = {beforeUpload}\r\n                        >\r\n                            {fileList.length >= content.imgLength ? null : uploadButton}\r\n                        </Upload>\r\n                        <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n                            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                        </Modal>\r\n                    </Col>\r\n                </Row>\r\n                <Row className ='item'>\r\n                    <Col span={4}>{content.title}</Col>\r\n                    <Col span={20} ><Input value = {state.title} onChange = {(e) => {changeInput('title',e)} }  placeholder={content.titleWarn} /></Col>\r\n                </Row>\r\n                <Row className ='item'>\r\n                    <Col span={4}>{content.subtile}</Col>\r\n                    <Col span={20} ><Input value = {state.subtitle} onChange = {(e) => {changeInput('subtitle',e)} }  placeholder={content.subtitleWarn} /></Col>\r\n                </Row>\r\n                <Row className ='item'>\r\n                    <Col span={4}>{content.content}</Col>\r\n                    <Col span={20} ><TextArea  autoSize={{ minRows: 6, maxRows: 20 }} value = {state.content} onChange = {(e) => {changeInput('content',e)} }  placeholder={content.congtentWarn} /></Col>\r\n                </Row>\r\n                <Row className ='item' style={{marginTop:'30px'}}>\r\n                    <Col offset={6} span={12}> \r\n                        <Button type=\"primary\" block onClick={()=>{submit()}}>\r\n                            {content.Button}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    //选择文章类别\r\n    const showWenzhangType = ()=>{\r\n        let {type} = state;\r\n        if(type == 1){\r\n            return(\r\n                <Row className ='item'>\r\n                    <Col span={4}>文章类目</Col>\r\n                    <Col span={5} >\r\n                        <Select defaultValue=\"呼吸道疾病\" style={{ width: 220 }} onChange={selectChange}>\r\n                            <Option value=\"1\">呼吸道疾病</Option>\r\n                            <Option value=\"2\">传染类疾病</Option>\r\n                            <Option value=\"3\">口腔疾病</Option>\r\n                            <Option value=\"4\">皮肤疾病</Option>\r\n                            <Option value=\"5\">肠道疾病</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n    }\r\n\r\n    //选择的值\r\n    const selectChange = (value)=>{\r\n        dispatch({\r\n            type:'SET_WENZHANG_TYPE',\r\n            data:{\r\n                wenzhangType:value,\r\n            }\r\n        })\r\n    }\r\n\r\n    ///input框内数据实时修改\r\n\t//input onchange触发\r\n\tconst changeInput = (type, e) => {\r\n        dispatch({\r\n            type:'SET_INPUT_VALUE',\r\n            data:{\r\n                [type] : e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    //上传图片\r\n    //关闭\r\n    const handleCancel = () => {\r\n        dispatch({\r\n            type:'HANDLE_CANCEL',\r\n            data:{\r\n                previewVisible: false\r\n            }\r\n        })\r\n    }\r\n\r\n    //预览图片\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        dispatch({\r\n            type:'HANDLE_PREVIEW',\r\n            data:{\r\n                previewImage: file.url || file.preview,\r\n            }\r\n        })\r\n    };\r\n\r\n    //上传照片触发\r\n    const handleChange =async ({file,fileList})=> {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        dispatch({\r\n            type:'HANDLE_CHNAGE',\r\n            data:{\r\n                fileList\r\n            }\r\n        })\r\n    };\r\n\r\n\t//上传文件之前的钩子，参数为上传的文件\r\n\tconst beforeUpload = (file) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\tfetch('http://182.92.64.245/tp5/public/index.php/index/index/savaImgToOss', {\r\n\t\t\tmethod:'post',\r\n\t\t\tbody: formData\r\n\t\t}).then(response => response.json())\r\n\t\t.catch(error => console.error('Error:', error))\r\n\t\t.then(response => {\r\n            let msg = response.msg;\r\n            let img = state.img;\r\n            img.push(msg);\r\n            dispatch({\r\n                type:'BEFORE_UPLOAD',\r\n                data:{\r\n                    img\r\n                }\r\n            })\r\n\t\t})\r\n    }\r\n    \r\n    //点击上传 如果type是1 就是上传文章 如果type是2 就是上传帖子\r\n    const submit = ()=>{\r\n        let {type,title,subtitle,content,img,wenzhangType} = state;\r\n        if( !type || !title || !subtitle || !content || !img || !wenzhangType ) {\r\n            message.warning('请把信息输入完整');\r\n            return 0;\r\n        }\r\n        //拿到用户id\r\n        let user_id = localStorage.userId;\r\n        if(!user_id){\r\n            message.warning('请登录');\r\n            return 0;\r\n        }\r\n        //转为字符串\r\n        img = JSON.stringify(img);\r\n        if(type == 2){\r\n            //如果type为2说明是帖子 也就没有这个属性\r\n            wenzhangType = 0;\r\n        }\r\n        //把数据全部存入数据库然后把页面数据清空\r\n        api({\r\n            url:host + 'newsInsertConent',\r\n            args: {\r\n                user_id,\r\n                title,\r\n                subtitle,\r\n                content,\r\n                img,\r\n                wenzhangType,\r\n                type\r\n            },\r\n            callback: (res) => {\r\n                message.success('上传成功');\r\n\r\n                dispatch({\r\n                    type:'SUBMIT_SUC'\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='share'>\r\n            <div className='header'>\r\n                {/* 用于切换上传内容的组件 */}\r\n                {showHeader()}\r\n            </div>\r\n            <div className='form'>\r\n                {/* 上传文章时需要选择文章的类别 */}\r\n                {showWenzhangType()}\r\n                {/* 用户上传需要填写的表单 */}\r\n                {showform()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Share;","//布局\r\nimport BaseLayout from './container/BaseLayout/index';\r\n//主页\r\nimport Index from './container/Index/index';\r\n//文章页面\r\nimport Article from './container/Article/index';\r\n//帖子页面\r\nimport Forum from './container/Forum/index';\r\n//详情页面\r\nimport Detail from './container/Detail/index';\r\n//分享页面\r\nimport Share from './container/Share/index';\r\n\r\n//配置路由  通过一个数组\r\nvar Routes = [   \r\n    {   \r\n        path: '/',\r\n        component: BaseLayout,\r\n        children: [\r\n            {\r\n                path: '/',\r\n                exact: true,\r\n                component: Index\r\n            },\r\n            {\r\n                path: '/index',\r\n                exact: true,\r\n                component: Index\r\n            },\r\n            {\r\n                path: '/article',\r\n                exact: true,\r\n                component: Article\r\n            },\r\n            {\r\n                path: '/forum',\r\n                exact: true,\r\n                component: Forum\r\n            },\r\n            {\r\n                path: '/share',\r\n                exact: true,\r\n                component: Share\r\n            },\r\n            {\r\n                path: '/details/:uniquekey',\r\n                exact: true,\r\n                component: Detail\r\n            },\r\n           \r\n        ]\r\n     },\r\n]\r\n//把路由配置暴露出去\r\nexport default Routes","import React from 'react';\n//配置hashRouter 使用独立的router文件\nimport { createHashHistory } from 'history';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n//引入配置的routes\nimport Routes from './routes';\n\n//创建路由history\nconst history = createHashHistory();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        {/* 通过renderRoutes解析routes */}\n        {renderRoutes(Routes)}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}