{"version":3,"sources":["public/until.js","layout/nav/index.js","layout/index.js","component/main/index.js","component/articleType/index.js","routes.js","component/tieZiInfo/index.js","App.js","serviceWorker.js","index.js"],"names":["iTime","SubMenu","Nav","id","mode","theme","defaultSelectedKeys","key","title","type","Item","href","Component","Header","Footer","Sider","Content","BasicLayout","width","style","minHeight","color","height","background","margin","textAlign","padding","renderRoutes","this","props","route","children","React","Tools","isPhone","phone","test","api","url","args","callback","argsStr","substr","length","fetch","then","response","json","res","childStr","data","childArr","i","push","encodeURIComponent","buildStr","str","buildArgs","formData","keys","newkeys","map","c","isEmpty","append","loading","state","text","element","document","getElementById","html","div","createElement","innerHTML","appendChild","setTimeout","display","e","clearTimeout","parentNode","removeChild","replace","undefined","setObj","obj","index","time","parseInt","Date","toJSON","bind","host","Main","onChange","console","log","showData","name","account","password","avatar","create_time","j","setState","columns","dataIndex","render","record","src","dataSource","rowKey","ArticleType","wenzhangType","subtitle","content","img","JSON","parse","delete","match","params","visibleHandleOk","visible","visibleHandleCancel","nextprops","marginRight","onClick","onOk","onCancel","Routes","path","component","Basiclayout","exact","history","createHashHistory","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30917377.chunk.js","sourcesContent":["var iTime;\r\nvar Tools = {\r\n    // 验证手机号的有效性,可以接受 Number 也可以接受 字符串\r\n    isPhone(phone) {\r\n        if(!(/^1[34578]\\d{9}$/.test(phone))){ \r\n            return false; \r\n        }else{\r\n            return true;\r\n        } \r\n    },\r\n\r\n    // fetch接口封装\r\n    api: function({ url, args='', callback }) {\r\n        let argsStr = '';\r\n        if(args!='') {\r\n            for(let key in args) {\r\n                argsStr += key + '=' + args[key] + '&';\r\n            }\r\n            argsStr = '?' + argsStr.substr(0, argsStr.length-1);\r\n        }\r\n        \r\n        fetch(url+argsStr)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            callback(res);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 把json解析成字符串\r\n     * author Bin\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    childStr: function (data) {\r\n        let childArr = [];\r\n        if(typeof(data) == 'object'){\r\n        for (let key in data) {\r\n            for (let i in this.childStr(data[key])) {\r\n            childArr.push('[' + key + ']' + this.childStr(data[key])[i]);\r\n            }\r\n        }\r\n        } else {\r\n        childArr.push(('=' + encodeURIComponent(data)));\r\n        }\r\n        return childArr;\r\n    },\r\n    /**\r\n     * 把json解析成字符串\r\n     * author bin\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    buildStr: function (data){\r\n        let str = '';\r\n        for (let key in data) {\r\n        for (let i in this.childStr(data[key])) {\r\n            str += (key + this.childStr(data[key])[i] + '&');\r\n        }\r\n        }\r\n        return str.substr(0, str.length-1);\r\n    },\r\n    buildArgs:function(formData,args,keys = []){\r\n        for(let i in args){\r\n            if(typeof(args[i]) == 'object'){\r\n                let newkeys = [...keys];\r\n                if(newkeys.length > 0){\r\n                    newkeys[0] = newkeys[0] + `[${i}]`;\r\n                }else{\r\n                    newkeys.push(i);\r\n                }\r\n                this.buildArgs(formData,args[i],newkeys);\r\n            }else{\r\n                let key = '';\r\n                keys.map( c => {\r\n                    this.isEmpty(key) ? key = c : key += `[${c}]`;\r\n                })\r\n                this.isEmpty(key) ? formData.append(i,args[i]) : formData.append(key+`[${i}]`,args[i]);\r\n            }\r\n        }\r\n        return formData;\r\n    },\r\n\r\n    loading:function(state,text = \"数据加载中，请稍后\",type = 1){\r\n        let element = document.getElementById(\"c-loading\");\r\n        if(state == 'show'){\r\n            if(this.isEmpty(element)){\r\n                let html =`<div id=\"c-loading\" style=\"display:none\">\r\n                    <div style=\"background: #000;position: fixed;width: 100%;height: 100%;top: 0;left: 0;z-index: 9999;transition: opacity .3s;opacity: 0.05;\"></div>\r\n                    <div  style=\"position: fixed;right: 40%;bottom: 45%;z-index:999999;margin-right:10px;padding: 20px;background-color: white;\">\r\n                        <div>\r\n                        <img src = \"//q.aiyongbao.com/trade/img/loading.gif\" style=\"margin-right:10px;vertical-align: middle;\"/>\r\n                        <font style=\"vertical-align: middle;color:#999\">${text}</font>\r\n                        </div>\r\n                    </div>\r\n                </div>`;\r\n                if(type == 0) html = `<div id=\"c-loading\" style=\"display:none;position: fixed;right: 40%;bottom: 45%;z-index: 999999;margin-right:10px;\"><img src = \"//q.aiyongbao.com/trade/img/loading.gif\" style=\"margin-right:10px;vertical-align: middle;\"/><font style=\"vertical-align: middle;color:#999\">${text}</font></div>`;\r\n                let div = document.createElement('div');\r\n                div.innerHTML = html;\r\n                document.getElementById('root').appendChild(div);\r\n                iTime = setTimeout(function(){\r\n                    try{\r\n                        document.getElementById(\"c-loading\").style.display = \"block\";\r\n                    }catch(e){\r\n                    }\r\n                    setTimeout(()=>{\r\n                        let element = document.getElementById(\"c-loading\");\r\n                        if (iTime !=\"\")clearTimeout(iTime);\r\n                        if(element) element.parentNode.removeChild(element);\r\n                    },5000)\r\n                },600);\r\n  \r\n            }\r\n  \r\n        }else{\r\n            if (iTime !=\"\")clearTimeout(iTime);\r\n            if(element) element.parentNode.removeChild(element);\r\n  \r\n        }\r\n    },\r\n    /* 判断是否为空 */\r\n    isEmpty: function(key){\r\n        if (typeof(key) === 'string') {\r\n            key = key.replace(/(^\\s*)|(\\s*$)/g, '');\r\n            if (key == '' || key == null || key == 'null' || key == undefined || key == 'undefined') {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        } else if (typeof(key) === 'undefined') {\r\n            return true;\r\n        } else if (typeof(key) == 'object') {\r\n            for(let i in key){\r\n                return false;\r\n            }\r\n            return true;\r\n        }else if (typeof(key) == 'boolean'){\r\n            return false;\r\n        }\r\n    },\r\n    /**\r\n     * zyx\r\n     * 2019/10/17\r\n     * 给obj对象重新赋值 把其中等于null的值赋值为''防止结构赋值时出错\r\n     */\r\n    setObj : function(obj){\r\n        for(let index in obj){\r\n            if(!obj[index]){\r\n                obj[index] = ''\r\n            }\r\n        }\r\n        return obj;\r\n    },\r\n    /**\r\n     * zyx\r\n     * 2019/10.22\r\n     * 时间戳转时间‘YYYY-MM-DD HH:mm:ss’\r\n     */\r\n    time : function(time){\r\n        //从数据库拿出来的时间戳是字符串形式 需要转化为数字\r\n        time = parseInt(time);\r\n        // 增加8小时\r\n        let date = new Date(time + 8 * 3600 * 1000); \r\n        return date.toJSON().substr(0, 19).replace('T', ' ');\r\n        //Date的‘toJSON’方法返回格林威治时间的JSON格式字符串，实际是使用‘toISOString’方法的结果。\r\n        //字符串形如‘2018-08-09T10:20:54.396Z’，转化为北京时间需要额外增加八个时区，\r\n        //我们需要取字符串前19位，然后把‘T’替换为空格，即是我们需要的时间格式。\r\n    }\r\n}\r\n\r\nexport const isPhone = Tools.isPhone.bind(Tools);\r\nexport const api = Tools.api.bind(Tools);\r\nexport const isEmpty = Tools.isEmpty.bind(Tools);\r\n//host 请求地址\r\nexport const host = 'http://182.92.64.245/tp5/public/index.php/index/index/';\r\nexport const setObj = Tools.setObj.bind(Tools);\r\nexport const time = Tools.time.bind(Tools);","import React,{ Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\n// 引入子菜单组件\r\nconst SubMenu = Menu.SubMenu; \r\n\r\nclass Nav extends Component {\r\n    render(){\r\n        return(\r\n            <Menu\r\n                id = \"home_nav\"\r\n                mode = \"inline\" \r\n                theme = \"dark\"  \r\n                defaultSelectedKeys={['1']}\r\n             >\r\n                <SubMenu\r\n                        key=\"sub1\"\r\n                        title={<span><Icon type=\"pie-chart\" /><span>用户模块</span></span>}\r\n                    >\r\n                        <Menu.Item key=\"1\"><a href=\"#/main\">用户信息</a></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub2\"\r\n                        title={<span><Icon type=\"dashboard\" /><span>疾病防治知识</span></span>}\r\n                    >\r\n                        <Menu.Item key=\"2\"><a href=\"#/articleType/1\">呼吸道疾病</a></Menu.Item>\r\n                        <Menu.Item key=\"3\"><a href=\"#/articleType/2\">传染类疾病</a></Menu.Item>\r\n                        <Menu.Item key=\"4\"><a href=\"#/articleType/3\">口腔疾病</a></Menu.Item>\r\n                        <Menu.Item key=\"5\"><a href=\"#/articleType/4\">皮肤疾病</a></Menu.Item>\r\n                        <Menu.Item key=\"6\"><a href=\"#/articleType/5\">肠道疾病</a></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub3\"\r\n                        title={<span><Icon type=\"dashboard\" /><span>疾病防治交流</span></span>}\r\n                    >\r\n                        <Menu.Item key=\"7\"><a href=\"#/tieziList\">疾病交流帖</a></Menu.Item>\r\n                    </SubMenu>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Nav;","import React,{ Component } from 'react';\r\n\r\nimport { Layout} from 'antd';\r\n\r\nimport { renderRoutes } from 'react-router-config';//引入renderRoutes\r\nimport Nav from './nav/index'\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n// 引入子菜单组件\r\n\r\n\r\n\r\nexport default class BasicLayout extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <Layout>\r\n            <Sider width={256} style={{ minHeight: '100vh', color: 'white' }}>\r\n                <div style={{ height: '32px', background: 'rgba(255,255,255,.2)', margin: '16px'}}/>\r\n                <Nav/>\r\n            </Sider>\r\n            <Layout >\r\n                <Header style={{ background: '#fff', textAlign: 'center', padding: 0 }}>疾病防治系统后台</Header>\r\n                <Content style={{ margin: '24px 16px 0' }}>\r\n                    <div style={{ padding: 24, background: '#fff', minHeight: 460 }}>\r\n                    {renderRoutes(this.props.route.children)}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Design ©2020 Created by PPYO</Footer>\r\n            </Layout>\r\n        </Layout>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nimport {Table,Button} from 'antd';\r\n//封装好的公共方法\r\nimport {api,host} from '../../public/until'\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showData:[],//需要做展示的数据\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.onChange();\r\n    }\r\n\r\n    onChange = ()=>{\r\n        api({\r\n            url:host + 'newsSelectAllUserInfo',\r\n          \r\n            callback: (res) => {\r\n                console.log(res);\r\n                this.showData(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 数据处理函数\r\n     * 将返回的数据处理成数据表格需要的数据\r\n     */\r\n    showData = (data)=>{\r\n        let showData = [];// 渲染的数据\r\n        \r\n        for(let i=0;i<data.length;i++){\r\n            showData.push({\r\n                id : \"\",\r\n                name : \"\",\r\n                account:\"\",\r\n                password :\"\",\r\n                avatar:\"\",\r\n                create_time:\"\",\r\n            })\r\n        }\r\n        \r\n        for(let j=0;j<data.length;j++){\r\n           \r\n            showData[j].id= data[j].id;\r\n            showData[j].name= data[j].name;\r\n            showData[j].account= data[j].account;\r\n            showData[j].password= data[j].password;\r\n            showData[j].avatar= data[j].avatar;\r\n            showData[j].create_time= data[j].create_time;\r\n        }\r\n\r\n        this.setState({\r\n            showData\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '作者头像',\r\n                key: 'avatar',\r\n                render: (text, record) => (\r\n                    <div>\r\n                      <img style={{height:'49px'}} src={record.avatar}></img>\r\n                     </div>\r\n                )\r\n            },\r\n            {\r\n                title: '账号',\r\n                dataIndex: 'account',\r\n                key: 'account',\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n            },\r\n            // {\r\n            //     title:'操作',\r\n            //     key: 'action',\r\n            //     render: (record) => (\r\n                   \r\n            //         <div>\r\n            //             <Button style={{color:\"#63B8FF\"}} onClick = {() => {\r\n\r\n            //             }} >编辑\r\n            //             </Button>\r\n            //         </div>\r\n            //     ),\r\n            // }\r\n        ];\r\n        return (\r\n            <div>\r\n                <Table \r\n                    dataSource={this.state.showData} \r\n                    columns={columns}\r\n                    rowKey={record => record.id}\r\n                />;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nimport {Table,Button,Modal} from 'antd';\r\n\r\n//封装好的公共方法\r\nimport {api,host} from '../../public/until'\r\n\r\n\r\nclass ArticleType extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showData:[],//需要做展示的数据\r\n            visible:false,//详情弹窗\r\n            content:'',//文章详情内容\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //拿到type\r\n        let wenzhangType = this.props.match.params.type;\r\n        this.onChange(wenzhangType);\r\n    }\r\n\r\n    onChange = (wenzhangType)=>{\r\n       \r\n         /**\r\n         * zyx\r\n         * 2020/5/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n                wenzhangType,\r\n            },\r\n            callback: (res) => {\r\n                this.showData(res);\r\n            }\r\n        });\r\n    }\r\n    \r\n    // 组件更行\r\n    shouldComponentUpdate(nextprops){\r\n        console.log('触发了更新');\r\n        console.log(this.props.match.params.type);\r\n        if(this.props.match.params.type != nextprops.match.params.type){\r\n            this.onChange(nextprops.match.params.type);\r\n            return 1;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * 数据处理函数\r\n     * 将返回的数据处理成数据表格需要的数据\r\n     */\r\n    showData = (data)=>{\r\n        console.log(data);\r\n        let showData = [];// 渲染的数据\r\n        \r\n        for(let i=0;i<data.length;i++){\r\n            showData.push({\r\n                id : \"\",\r\n                name : \"\",\r\n                avatar : \"\",\r\n                title : \"\",\r\n                subtitle : \"\",\r\n                wenzhangType : \"\",\r\n                content : \"\",\r\n                img : \"\",\r\n                create_time : \"\",\r\n            })\r\n        }\r\n        \r\n        for(let j=0;j<data.length;j++){\r\n            let wenzhangType = data[j].wenzhangType;\r\n            switch(wenzhangType) {\r\n                case 1:\r\n                    wenzhangType = '呼吸道疾病'\r\n                    break;\r\n                case 2:\r\n                    wenzhangType = '传染类疾病'\r\n                    break;\r\n                case 3:\r\n                    wenzhangType = '口腔疾病'\r\n                    break;\r\n                case 4:\r\n                    wenzhangType = '皮肤疾病'\r\n                    break;\r\n                case 5:\r\n                    wenzhangType = '肠道疾病'\r\n                    break;\r\n\r\n            }\r\n            let img =  JSON.parse(data[j].img); \r\n            \r\n            showData[j].id= data[j].id;\r\n            showData[j].name= data[j].name;\r\n            showData[j].avatar= data[j].avatar;\r\n            showData[j].title= data[j].title;\r\n            showData[j].subtitle= data[j].subtitle;\r\n            showData[j].content= data[j].content;\r\n            showData[j].img= img;\r\n            showData[j].wenzhangType= wenzhangType;\r\n            showData[j].create_time= data[j].create_time;\r\n        }\r\n\r\n        this.setState({\r\n            showData\r\n        })\r\n\r\n    }\r\n\r\n    delete = (id)=>{\r\n        api({\r\n            url:host + 'newsDeleteContent',\r\n            args: {\r\n                id\r\n            },\r\n            callback: (res) => {\r\n                //拿到type\r\n                let wenzhangType = this.props.match.params.type;\r\n                this.onChange(wenzhangType);\r\n            }\r\n        });\r\n    }\r\n\r\n    //打开详情弹窗\r\n    visibleHandleOk = (content)=>{\r\n        this.setState({\r\n            content,\r\n            visible:true,\r\n        })\r\n    }\r\n\r\n    //关闭详情弹窗\r\n    visibleHandleCancel = ()=>{\r\n        this.setState({\r\n            content:'',\r\n            visible:false,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '作者',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '作者头像',\r\n                key: 'avatar',\r\n                render: (text, record) => (\r\n                    <div>\r\n                      <img style={{height:'49px'}} src={record.avatar}></img>\r\n                     </div>\r\n                )\r\n            },\r\n            {\r\n                title: '题目',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n            },\r\n            {\r\n                title: '提纲',\r\n                dataIndex: 'subtitle',\r\n                key: 'subtitle',\r\n            },\r\n            {\r\n                title: '文章类型',\r\n                dataIndex: 'wenzhangType',\r\n                key: 'wenzhangType',\r\n            },\r\n            {\r\n                title: '文章背景',\r\n                key: 'img',\r\n                render: (text, record) => (\r\n                    <div>\r\n                      <img style={{height:'49px'}} src={record.img[0]}></img>\r\n                     </div>\r\n                )\r\n            },\r\n            {\r\n                title: '发表时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n            },\r\n           \r\n            {\r\n                title:'操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                   \r\n                    <div>\r\n                        <Button style={{color:\"#63B8FF\",marginRight:\"10px\"}} onClick = {() => {\r\n                            this.delete(record.id)\r\n                        }} >删除\r\n                        </Button>\r\n                        <Button style={{color:\"#63B8FF\"}} onClick = {() => {\r\n                            this.visibleHandleOk(record.content)\r\n                        }} >查看文章详情\r\n                        </Button>\r\n                    </div>\r\n                ),\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                 <Modal\r\n                    title=\"文章详情\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.visibleHandleCancel}\r\n                    onCancel={this.visibleHandleCancel}\r\n                >\r\n                    <p>{this.state.content}</p>\r\n                </Modal>\r\n                <Table \r\n                    dataSource={this.state.showData} \r\n                    columns={columns}\r\n                    rowKey={record => record.id}\r\n                />;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleType;","//基本布局页面\r\nimport Basiclayout from './layout/index';\r\n//主页面\r\nimport Main from './component/main/index';\r\n//文章详情页面\r\nimport ArticleType from './component/articleType/index';\r\n//帖子页面\r\nimport TieziList from './component/tieZiInfo/index'\r\n//登录页面\r\n// import Login from './component/login/index';\r\n\r\n\r\nvar Routes = [ \r\n        {   \r\n            path: '/',\r\n            component: Basiclayout,\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    exact: true,\r\n                    component: Main\r\n                },\r\n                {\r\n                    path: '/main',\r\n                    exact: true,\r\n                    component: Main\r\n                },\r\n                {\r\n                    path: '/articleType/:type',\r\n                    exact: true,\r\n                    component: ArticleType\r\n                },\r\n                {\r\n                    path: '/tieziList',\r\n                    exact: true,\r\n                    component: TieziList\r\n                },\r\n                // {\r\n                //     path: '/login',\r\n                //     exact: true,\r\n                //     component: Login\r\n                // }\r\n            ]\r\n         },\r\n        \r\n]\r\n\r\nexport default Routes","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nimport {Table,Button,Modal} from 'antd';\r\n\r\n//封装好的公共方法\r\nimport {api,host} from '../../public/until'\r\n\r\n\r\nclass TieziList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showData:[],//需要做展示的数据\r\n            visible:false,//详情弹窗\r\n            content:'',//文章详情内容\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.onChange();\r\n    }\r\n\r\n    onChange = ()=>{\r\n         /**\r\n         * zyx\r\n         * 2020/5/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:2,\r\n            },\r\n            callback: (res) => {\r\n                this.showData(res);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 数据处理函数\r\n     * 将返回的数据处理成数据表格需要的数据\r\n     */\r\n    showData = (data)=>{\r\n        console.log('我是帖子数据');\r\n        console.log(data);\r\n        let showData = [];// 渲染的数据\r\n        \r\n        for(let i=0;i<data.length;i++){\r\n            showData.push({\r\n                id : \"\",\r\n                name : \"\",\r\n                avatar : \"\",\r\n                title : \"\",\r\n                subtitle : \"\",\r\n                content : \"\",\r\n                img : \"\",\r\n                create_time : \"\",\r\n            })\r\n        }\r\n        \r\n        for(let j=0;j<data.length;j++){\r\n            let img =  JSON.parse(data[j].img); \r\n            \r\n            showData[j].id= data[j].id;\r\n            showData[j].name= data[j].name;\r\n            showData[j].avatar= data[j].avatar;\r\n            showData[j].title= data[j].title;\r\n            showData[j].subtitle= data[j].subtitle;\r\n            showData[j].content= data[j].content;\r\n            showData[j].img= img;\r\n            showData[j].create_time= data[j].create_time;\r\n        }\r\n\r\n        this.setState({\r\n            showData\r\n        })\r\n\r\n    }\r\n\r\n    delete = (id)=>{\r\n        api({\r\n            url:host + 'newsDeleteContent',\r\n            args: {\r\n                id\r\n            },\r\n            callback: (res) => {\r\n                //拿到type\r\n                this.onChange();\r\n            }\r\n        });\r\n    }\r\n\r\n     //打开详情弹窗\r\n     visibleHandleOk = (content)=>{\r\n        this.setState({\r\n            content,\r\n            visible:true,\r\n        })\r\n    }\r\n\r\n    //关闭详情弹窗\r\n    visibleHandleCancel = ()=>{\r\n        this.setState({\r\n            content:'',\r\n            visible:false,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '作者',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '作者头像',\r\n                key: 'avatar',\r\n                render: (text, record) => (\r\n                    <div>\r\n                      <img style={{height:'49px'}} src={record.avatar}></img>\r\n                     </div>\r\n                )\r\n            },\r\n            {\r\n                title: '题目',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n            },\r\n            {\r\n                title: '提纲',\r\n                dataIndex: 'subtitle',\r\n                key: 'subtitle',\r\n            },\r\n            {\r\n                title: '文章背景',\r\n                key: 'img',\r\n                render: (text, record) => (\r\n                    <div>\r\n                      <img style={{height:'49px'}} src={record.img[0]}></img>\r\n                     </div>\r\n                )\r\n            },\r\n            {\r\n                title: '发表时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n            },\r\n           \r\n            {\r\n                title:'操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                   \r\n                    <div>\r\n                        <Button style={{color:\"#63B8FF\",marginRight:\"10px\"}} onClick = {() => {\r\n                            this.delete(record.id)\r\n                        }} >删除\r\n                        </Button>\r\n                        <Button style={{color:\"#63B8FF\"}} onClick = {() => {\r\n                            this.visibleHandleOk(record.content)\r\n                        }} >查看帖子详情\r\n                        </Button>\r\n                    </div>\r\n                ),\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                 <Modal\r\n                    title=\"文章详情\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.visibleHandleCancel}\r\n                    onCancel={this.visibleHandleCancel}\r\n                >\r\n                    <p>{this.state.content}</p>\r\n                </Modal>\r\n                <Table \r\n                    dataSource={this.state.showData} \r\n                    columns={columns}\r\n                    rowKey={record => record.id}\r\n                />;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TieziList;","import React, { Component } from 'react';\n\n//配置hashRouter 使用独立的router文件\nimport { createHashHistory } from 'history';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n//引入配置的routes\nimport Routes from './routes';\n\nimport './App.scss';\n\nconst history = createHashHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        {renderRoutes(Routes)}\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}