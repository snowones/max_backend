{"version":3,"sources":["layout/nav/index.js","layout/index.js","component/main/index.js","routes.js","component/article/index.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Nav","id","mode","theme","defaultSelectedKeys","key","title","type","Item","href","Component","Header","Footer","Sider","Content","BasicLayout","width","style","minHeight","color","height","background","margin","textAlign","padding","renderRoutes","this","props","route","children","React","Main","dataSource","name","age","address","columns","dataIndex","Routes","path","component","Basiclayout","exact","history","createHashHistory","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oZAKMA,EAAU,IAAKA,QA6BNC,E,iLAzBP,OACI,uBACIC,GAAK,WACLC,KAAO,SACPC,MAAQ,OACRC,oBAAqB,CAAC,MAEtB,kBAACL,EAAD,CACQM,IAAI,OACJC,MAAO,8BAAM,uBAAMC,KAAK,cAAc,wCAEtC,sBAAMC,KAAN,CAAWH,IAAI,KAAI,uBAAGI,KAAK,UAAR,UAEvB,kBAACV,EAAD,CACIM,IAAI,OACJC,MAAO,8BAAM,uBAAMC,KAAK,cAAc,yCAEtC,sBAAMC,KAAN,CAAWH,IAAI,KAAI,uBAAGI,KAAK,aAAR,kB,GAnBzBC,aCDVC,E,IAAAA,OAAQC,E,IAAAA,OAAQC,E,IAAAA,MAAOC,E,IAAAA,QAKVC,E,iLAGjB,OACI,2BACI,kBAACF,EAAD,CAAOG,MAAO,IAAKC,MAAO,CAAEC,UAAW,QAASC,MAAO,UACnD,yBAAKF,MAAO,CAAEG,OAAQ,OAAQC,WAAY,uBAAwBC,OAAQ,UAC1E,kBAAC,EAAD,OAEJ,2BACI,kBAACX,EAAD,CAAQM,MAAO,CAAEI,WAAY,OAAQE,UAAW,SAAUC,QAAS,IAAnE,UACA,kBAACV,EAAD,CAASG,MAAO,CAAEK,OAAQ,gBACtB,yBAAKL,MAAO,CAAEO,QAAS,GAAIH,WAAY,OAAQH,UAAW,MACzDO,YAAaC,KAAKC,MAAMC,MAAMC,YAGnC,kBAACjB,EAAD,CAAQK,MAAO,CAAEM,UAAW,WAA5B,gD,GAhByBO,IAAMpB,W,kBCoChCqB,G,wLARP,OACI,6BACI,uBAAOC,WAlCI,CACf,CACI3B,IAAK,IACL4B,KAAM,qBACNC,IAAK,GACLC,QAAS,qDAEb,CACI9B,IAAK,IACL4B,KAAM,qBACNC,IAAK,GACLC,QAAS,sDAuBsBC,QAnBvB,CACZ,CACI9B,MAAO,eACP+B,UAAW,OACXhC,IAAK,QAET,CACIC,MAAO,eACP+B,UAAW,MACXhC,IAAK,OAET,CACIC,MAAO,eACP+B,UAAW,UACXhC,IAAK,cAIT,S,GAnCOK,cCmCJ4B,G,OA9BF,CACL,CACIC,KAAM,IACNC,UAAWC,EACXZ,SAAU,CACN,CACIU,KAAM,IACNG,OAAO,EACPF,UAAWT,GAEf,CACIQ,KAAM,QACNG,OAAO,EACPF,UAAWT,GAEf,CACIQ,KAAM,WACNG,OAAO,EACPF,U,iLCvBZ,OACI,yE,GAHU9B,kBCQhBiC,G,OAAUC,eAYDC,E,iLARX,OACE,kBAAC,IAAD,CAAQF,QAASA,GACdlB,YAAaa,Q,GAJJ5B,aCDEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4c7762f2.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\n// 引入子菜单组件\r\nconst SubMenu = Menu.SubMenu; \r\n\r\nclass Nav extends Component {\r\n    render(){\r\n        return(\r\n            <Menu\r\n                id = \"home_nav\"\r\n                mode = \"inline\" \r\n                theme = \"dark\"  \r\n                defaultSelectedKeys={['1']}\r\n             >\r\n                <SubMenu\r\n                        key=\"sub1\"\r\n                        title={<span><Icon type=\"pie-chart\" /><span>Main</span></span>}\r\n                    >\r\n                        <Menu.Item key=\"1\"><a href=\"#/main\">Main</a></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub2\"\r\n                        title={<span><Icon type=\"dashboard\" /><span>Other</span></span>}\r\n                    >\r\n                        <Menu.Item key=\"2\"><a href=\"#/article\">Article</a></Menu.Item>\r\n                    </SubMenu>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Nav;","import React,{ Component } from 'react';\r\n\r\nimport { Layout} from 'antd';\r\n\r\nimport { renderRoutes } from 'react-router-config';//引入renderRoutes\r\nimport Nav from './nav/index'\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n// 引入子菜单组件\r\n\r\n\r\n\r\nexport default class BasicLayout extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <Layout>\r\n            <Sider width={256} style={{ minHeight: '100vh', color: 'white' }}>\r\n                <div style={{ height: '32px', background: 'rgba(255,255,255,.2)', margin: '16px'}}/>\r\n                <Nav/>\r\n            </Sider>\r\n            <Layout >\r\n                <Header style={{ background: '#fff', textAlign: 'center', padding: 0 }}>Header</Header>\r\n                <Content style={{ margin: '24px 16px 0' }}>\r\n                    <div style={{ padding: 24, background: '#fff', minHeight: 460 }}>\r\n                    {renderRoutes(this.props.route.children)}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nimport {Table} from 'antd';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const dataSource = [\r\n            {\r\n                key: '1',\r\n                name: '胡彦斌',\r\n                age: 32,\r\n                address: '西湖区湖底公园1号',\r\n            },\r\n            {\r\n                key: '2',\r\n                name: '胡彦祖',\r\n                age: 42,\r\n                address: '西湖区湖底公园1号',\r\n            },\r\n        ];\r\n            \r\n        const columns = [\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '年龄',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n            },\r\n            {\r\n                title: '住址',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <Table dataSource={dataSource} columns={columns} />;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","//基本布局页面\r\nimport Basiclayout from './layout/index';\r\n//主页面\r\nimport Main from './component/main/index';\r\n//文章详情页面\r\nimport Article from './component/article/index';\r\n//登录页面\r\n// import Login from './component/login/index';\r\n\r\n\r\nvar Routes = [ \r\n        {   \r\n            path: '/',\r\n            component: Basiclayout,\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    exact: true,\r\n                    component: Main\r\n                },\r\n                {\r\n                    path: '/main',\r\n                    exact: true,\r\n                    component: Main\r\n                },\r\n                {\r\n                    path: '/article',\r\n                    exact: true,\r\n                    component: Article\r\n                },\r\n                // {\r\n                //     path: '/login',\r\n                //     exact: true,\r\n                //     component: Login\r\n                // }\r\n            ]\r\n         },\r\n        \r\n]\r\n\r\nexport default Routes","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nclass Article extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                文章详情页面\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\n\n//配置hashRouter 使用独立的router文件\nimport { createHashHistory } from 'history';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n//引入配置的routes\nimport Routes from './routes';\n\nimport './App.scss';\n\nconst history = createHashHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        {renderRoutes(Routes)}\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}