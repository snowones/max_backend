{"version":3,"sources":["container/BaseLayout/NewsHeader/Nav.js","container/BaseLayout/NewsHeader/index.js","container/BaseLayout/NewsFooter/index.js","container/BaseLayout/index.js","container/until.js","container/Index/IndexTab/index.js","container/component/ImgBlockTypeOne/index.js","container/Index/IndexLeft/index.js","container/Index/IndexBottom/index.js","container/Index/IndexRight/index.js","container/Index/index.js","container/Posting/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","mode","selectedKeys","current","style","background","onClick","menuItemClick","Item","key","icon","AppstoreOutlined","to","NewsHeader","useState","setCurrent","className","span","href","src","alt","e","Footer","Layout","NewsFooter","textAlign","Content","BaseLayout","padding","renderRoutes","route","children","Tools","api","url","args","callback","argsStr","substr","length","fetch","then","response","json","res","time","parseInt","Date","toJSON","replace","bind","host","TabPane","Tabs","IndexTab","news","setNews","useEffect","type","console","log","showData","data","listData","i","JSON","parse","img","push","uniquekey","id","title","List","newsList","map","newsItem","index","target","defaultActiveKey","onChange","tab","ImgBlockTypeOne","wenzhangType","count","thumbnail_pic_s","author_name","name","componentType","width","imageWidth","ImageWidth","realtype","cartTitle","bordered","marginTop","justifyContent","newsImage","IndexLeft","autoplay","IndexBottom","IndexRight","Index","process","Routes","path","component","exact","history","createHashHistory","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"wWAwCeA,G,MAjCH,SAAAC,GACR,OACI,kBAAC,IAAD,CAAMC,KAAK,aAAaC,aAAc,CAACF,EAAMG,SACrCC,MAAO,CAACC,WAAY,WACpBC,QAASN,EAAMO,eAEnB,kBAAC,IAAKC,KAAN,CAAWC,IAAI,QAAQC,KAAM,kBAACC,EAAA,EAAD,OACzB,kBAAC,IAAD,CAAMC,GAAG,UAAT,iBAKJ,kBAAC,IAAKJ,KAAN,CAAWC,IAAI,SAASC,KAAM,kBAACC,EAAA,EAAD,OAC1B,kBAAC,IAAD,CAAMC,GAAG,WAAT,iBAKJ,kBAAC,IAAKJ,KAAN,CAAWC,IAAI,UAAUC,KAAM,kBAACC,EAAA,EAAD,OAC3B,kBAAC,IAAD,CAAMC,GAAG,YAAT,iBAKJ,kBAAC,IAAKJ,KAAN,CAAWC,IAAI,QAAQC,KAAM,kBAACC,EAAA,EAAD,OACzB,kBAAC,IAAD,CAAMC,GAAG,UAAT,oBCODC,EAhCI,WAAK,MAGSC,mBAAS,QAHlB,mBAGbX,EAHa,KAGLY,EAHK,KAUpB,OACI,yBAAKC,UAAU,cACX,gCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACP,uBAAGD,UAAU,OAAOE,KAAK,KACrB,yBAAKC,IAAI,+DAA+DC,IAAI,SAC5E,gDAGR,kBAAC,IAAD,CAAKH,KAAM,IACP,kBAAC,EAAD,CACId,QAASA,EACTI,cAlBJ,SAAAc,GAChBN,EAAWM,EAAEZ,a,SCXba,EAAWC,IAAXD,OASOE,EAPI,SAAAxB,GACf,OACI,kBAACsB,EAAD,CAAQlB,MAAO,CAAEqB,UAAW,WAA5B,qCCCAC,G,OAAYH,IAAZG,SAeOC,EAbI,SAAA3B,GACf,OACI,kBAAC,IAAD,CAAQgB,UAAU,UACd,kBAAC,EAAD,MACA,kBAACU,EAAD,CAAStB,MAAO,CAAEwB,QAAS,WACvB,yBAAKZ,UAAU,uBACVa,YAAa7B,EAAM8B,MAAMC,YAGlC,kBAAC,EAAD,Q,QCnBRC,EAAQ,CAERC,IAAK,YAAsC,IAA3BC,EAA0B,EAA1BA,IAA0B,IAArBC,YAAqB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SACtBC,EAAU,GACd,GAAS,IAANF,EAAU,CACT,IAAI,IAAI1B,KAAO0B,EACXE,GAAW5B,EAAM,IAAM0B,EAAK1B,GAAO,IAEvC4B,EAAU,IAAMA,EAAQC,OAAO,EAAGD,EAAQE,OAAO,GAGrDC,MAAMN,EAAIG,GACTI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFR,EAASQ,OAQjBC,KAAO,SAASA,GAKZ,OAHAA,EAAOC,SAASD,GAEL,IAAIE,KAAKF,EAAO,OACfG,SAASV,OAAO,EAAG,IAAIW,QAAQ,IAAK,OAO3ChB,EAAMD,EAAMC,IAAIiB,KAAKlB,GAErBmB,EAAO,yDC/BZC,GDgCYpB,EAAMa,KAAKK,KAAKlB,GChChBqB,IAAZD,SAmFOE,EAjFE,SAAAtD,GACb,IADsB,EAMAc,mBAAS,IANT,mBAMfyC,EANe,KAMVC,EANU,KAQrBC,qBAAU,WAEYzD,EAAM0D,KAMzBzB,EAAI,CACAC,IAAIiB,EAAO,0BACXhB,KAAM,CACFuB,KAAK,GAETtB,SAAU,SAACQ,GACPe,QAAQC,IAAIhB,GACZiB,EAASjB,QAGnB,IAOF,IAAMiB,EAAW,SAACC,GAEd,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAKvB,OAAQyB,IAAK,CACxBC,KAAKC,MAAMJ,EAAKE,GAAGG,KAC7BJ,EAASK,KAAK,CACVC,UAAWP,EAAKE,GAAGM,GACnBC,MAAOT,EAAKE,GAAGO,QAIvBf,EAAQO,IAGNS,EAAO,WACTb,QAAQC,IAAIL,GAEZ,IAAIkB,EAASlB,EAAKmB,KAAI,SAACC,EAAUC,GAAX,OAClB,wBAAInE,IAAKmE,GACJ,kBAAC,IAAD,CAAMhE,GAAE,kBAAa+D,EAASN,WAAaQ,OAAO,UAC7CF,EAASJ,WAIvB,OACI,4BACKE,IAIb,OACG,6BACK,kBAAC,IAAD,CAAMK,iBAAiB,IAAIC,SA/DlB,SAACtE,GACdkD,QAAQC,IAAInD,KA+DJ,kBAAC2C,EAAD,CAAS4B,IAAI,2BAAOvE,IAAI,KACpB,kBAAC+D,EAAD,OAEJ,kBAACpB,EAAD,CAAS4B,IAAI,2BAAOvE,IAAI,KACpB,kBAAC+D,EAAD,OAEJ,kBAACpB,EAAD,CAAS4B,IAAI,2BAAOvE,IAAI,KACpB,kBAAC+D,EAAD,OAEJ,kBAACpB,EAAD,CAAS4B,IAAI,2BAAOvE,IAAI,KACpB,kBAAC+D,EAAD,U,kBC0BLS,G,OAnGS,SAAAjF,GAAS,MAGLc,mBAAS,IAHJ,mBAGrByC,EAHqB,KAGhBC,EAHgB,KAM7BC,qBAAU,WAEN,IAAIyB,EAAelF,EAAM0D,KAMzBzB,EAAI,CACAC,IAAIiB,EAAO,0BACXhB,KAAM,CACFuB,KAAK,EACLwB,gBAEJ9C,SAAU,SAACQ,GACPe,QAAQC,IAAIhB,GACZiB,EAASjB,QAGnB,IAOF,IAAMiB,EAAW,SAACC,GAEd,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIhE,EAAMmF,MAAOnB,IAAK,CAClC,IAAIG,EAAMF,KAAKC,MAAMJ,EAAKE,GAAGG,KAC7BJ,EAASK,KAAK,CACVC,UAAWP,EAAKE,GAAGM,GACnBc,gBAAiBjB,EAAI,GACrBI,MAAOT,EAAKE,GAAGO,MACfc,YAAavB,EAAKE,GAAGsB,OAK7B9B,EAAQO,IAgDZ,OACI,yBAAK/C,UAAU,oBA7CD,WACd,GAAGuC,EAAKhB,OAAO,CACX,IAAIkC,EAAW,GA8Bf,OA7B0B,GAAvBzE,EAAMuF,cACLd,EAASlB,EAAKmB,KAAI,SAACC,EAAUC,GAAX,OACd,yBAAKnE,IAAKmE,EAAO5D,UAAU,kBAAkBZ,MAAO,CAACoF,MAAMxF,EAAMyF,aAC7D,kBAAC,IAAD,CAAM7E,GAAE,kBAAa+D,EAASN,WAAaQ,OAAO,UAC9C,yBAAKzD,IAAI,iBAAiBD,IAAKwD,EAASS,gBAAiBI,MAAOxF,EAAMyF,aACtE,4BAAKd,EAASJ,OACd,2BAAII,EAASU,kBAKI,GAAvBrF,EAAMuF,gBACZd,EAASlB,EAAKmB,KAAI,SAACC,EAASC,GAAV,OACd,kBAAC,IAAD,CAAMhE,GAAE,kBAAa+D,EAASN,WAAaQ,OAAO,SAASpE,IAAKmE,GAC5D,6BAAU5D,UAAU,kBAAkBZ,MAAO,CAACoF,MAAMxF,EAAMwF,QACtD,yBAAKxE,UAAU,mBAAmBZ,MAAO,CAACoF,MAAMxF,EAAM0F,aAClD,yBAAKtF,MAAO,CAACoF,MAAMxF,EAAM0F,YAAavE,IAAKwD,EAASS,gBAAiBhE,IAAKuD,EAASJ,SAGvF,yBAAKvD,UAAU,qBACX,2BAAI2D,EAASJ,OACb,0BAAMvD,UAAU,YAAa2D,EAASgB,UACtC,8BAAOhB,EAASU,oBAQhC,kBAAC,IAAD,CAAMrE,UAAkC,KAAvBhB,EAAMuF,cAAuB,kBAAkB,aAAchB,MAAOvE,EAAM4F,UAAWC,UAAU,EAAMzF,MAAO,CAACoF,MAAMxF,EAAMwF,MAAMM,UAAU,SACtJ,yBAAK9E,UAAU,uBAAuBZ,MAAO,CAACoF,MAAMxF,EAAMwF,MAAMO,eAAe/F,EAAM+F,iBAChFtB,IAKb,MAAO,2BAMNuB,MCtFEC,EAfG,SAAAjG,GAEd,OACG,6BACI,kBAAC,IAAD,CAAUkG,UAAQ,GACb,6BAAK,yBAAK/E,IAAI,6DACd,6BAAK,yBAAKA,IAAI,6DACd,6BAAK,yBAAKA,IAAI,6DACd,6BAAK,yBAAKA,IAAI,8DAElB,kBAAC,EAAD,CAAkBgE,MAAO,GAAIzB,KAAK,IAAI8B,MAAM,OAAOC,WAAW,QAC7DG,UAAU,iCAAQG,eAAe,eAAeR,cAAc,QCH5DY,EATK,SAAAnG,GAEhB,OACG,6BACK,kBAAC,EAAD,CAAiBmF,MAAO,GAAIzB,KAAK,IAAI8B,MAAM,OAAOC,WAAW,QAAQG,UAAU,aAC/EG,eAAe,cAAcR,cAAc,QCGxCa,EARI,SAAApG,GAEf,OACG,6BACK,kBAAC,EAAD,CAAiBwF,MAAM,OAAOE,WAAW,QAAQhC,KAAK,IAAIyB,MAAO,EAAGS,UAAU,qBAAML,cAAc,QC6D/Fc,G,OArDD,SAAArG,GAWV,OATAyD,qBAAU,WAGNE,QAAQC,IAAI,OACZD,QAAQC,IAAI0C,sIACZ3C,QAAQC,IAAI0C,8CAEd,IAGE,yBAAKtF,UAAU,SACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,IACP,kBAAC,IAAD,CAAKD,UAAU,YACX,kBAAC,IAAD,CAAKC,KAAM,GACP,yBAAKD,UAAU,gBAEX,kBAAC,EAAD,QAIR,kBAAC,IAAD,CAAKC,KAAM,GACP,yBAAKD,UAAU,kBAEX,kBAAC,EAAD,QAIR,kBAAC,IAAD,CAAKC,KAAM,GACP,yBAAKD,UAAU,iBAEX,kBAAC,EAAD,SAMZ,kBAAC,IAAD,KACI,yBAAKA,UAAU,UAEX,kBAAC,EAAD,SAKZ,kBAAC,IAAD,CAAKC,KAAM,QC3DfmC,G,OAAYC,IAAZD,SC4BOmD,EAxBF,CACT,CACIC,KAAM,IACNC,UAAW9E,EACXI,SAAU,CACN,CACIyE,KAAM,IACNE,OAAO,EACPD,UAAWJ,GAEf,CACIG,KAAM,SACNE,OAAO,EACPD,UAAWJ,GAEf,CACIG,KAAM,WACNE,OAAO,EACPD,UDpBA,SAAAzG,GAKZ,OACG,6BACI,kBAAC,IAAD,CAAM8E,iBAAiB,IAAIC,SALjB,SAACtE,GACdkD,QAAQC,IAAInD,KAKJ,kBAAC,EAAD,CAASuE,IAAI,QAAQvE,IAAI,KAAzB,yBAGA,kBAAC,EAAD,CAASuE,IAAI,QAAQvE,IAAI,KAAzB,yBAGA,kBAAC,EAAD,CAASuE,IAAI,QAAQvE,IAAI,KAAzB,gCEVVkG,EAAUC,cAaDC,MAXf,WACE,OACE,yBAAK7F,UAAU,OACb,kBAAC,IAAD,CAAQ2F,QAASA,GAEd9E,YAAa0E,MCJFO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAAAiF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlE,QAAQkE,MAAMA,EAAMC,a","file":"static/js/main.981132b2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Menu} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport { AppstoreOutlined } from '@ant-design/icons';\r\nimport './index.scss';\r\n\r\n//建立导航\r\nconst Nav = props =>{\r\n    return(\r\n        <Menu mode=\"horizontal\" selectedKeys={[props.current] }\r\n                style={{background: '#f0f2f5'}}\r\n                onClick={props.menuItemClick}\r\n                >\r\n            <Menu.Item key=\"index\" icon={<AppstoreOutlined />}>\r\n                <Link to='/index'>\r\n                    主页\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"artcle\" icon={<AppstoreOutlined />}>\r\n                <Link to='/artcle'>\r\n                   文章\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"posting\" icon={<AppstoreOutlined />}>\r\n                <Link to='/posting'>\r\n                    帖子\r\n                </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"login\" icon={<AppstoreOutlined />}>\r\n                <Link to='/login'>\r\n                   登录\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n\r\n    );\r\n};\r\nexport default Nav;","import React, { useState, useEffect } from 'react';\r\nimport { Row ,Col } from 'antd';\r\n//引入导航\r\nimport Nav from './Nav';\r\nimport './index.scss';\r\n\r\n\r\nconst NewsHeader = ()=> {\r\n\r\n    //导航切换 current参数\r\n    const [current,setCurrent] = useState('mail');\r\n\r\n    //点击切换 修改current\r\n    const handleClick = e => {\r\n        setCurrent(e.key)\r\n    };\r\n\r\n    return(\r\n        <div className='new-header'>\r\n            <header>\r\n                <Row>\r\n                    <Col span={2}></Col>\r\n                    <Col span={4}>\r\n                        <a className='logo' href='/'>\r\n                            <img src='https://1978246522-max.oss-cn-hangzhou.aliyuncs.com/logo.png' alt='logo'/>\r\n                            <span>新闻</span>\r\n                        </a>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Nav \r\n                            current={current}\r\n                            menuItemClick={handleClick}/>\r\n                    </Col>\r\n                </Row>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsHeader;","import React, { useState, useEffect } from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst NewsFooter = props=> {\r\n    return(\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            News Web ©2020 Created by ZYX\r\n        </Footer>\r\n    )\r\n}\r\nexport default NewsFooter;","import React, { useState, useEffect } from 'react';\r\nimport NewsHeader from './NewsHeader/index';\r\nimport NewsFooter from './NewsFooter/index';\r\n//引入renderRoutes\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Layout } from 'antd';\r\nimport './index.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst BaseLayout = props => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <NewsHeader />\r\n            <Content style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-content\">\r\n                    {renderRoutes(props.route.children)}\r\n                </div>\r\n            </Content>\r\n            <NewsFooter /> \r\n        </Layout>\r\n    )\r\n}\r\nexport default BaseLayout;","var Tools = {\r\n    // fetch接口封装\r\n    api: function({ url, args='', callback }) {\r\n        let argsStr = '';\r\n        if(args!='') {\r\n            for(let key in args) {\r\n                argsStr += key + '=' + args[key] + '&';\r\n            }\r\n            argsStr = '?' + argsStr.substr(0, argsStr.length-1);\r\n        }\r\n        \r\n        fetch(url+argsStr)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            callback(res);\r\n        });\r\n    },\r\n    /**\r\n     * zyx\r\n     * 2019/10.22\r\n     * 时间戳转时间‘YYYY-MM-DD HH:mm:ss’\r\n     */\r\n    time : function(time){\r\n        //从数据库拿出来的时间戳是字符串形式 需要转化为数字\r\n        time = parseInt(time);\r\n        // 增加8小时\r\n        let date = new Date(time + 8 * 3600 * 1000); \r\n        return date.toJSON().substr(0, 19).replace('T', ' ');\r\n        //Date的‘toJSON’方法返回格林威治时间的JSON格式字符串，实际是使用‘toISOString’方法的结果。\r\n        //字符串形如‘2018-08-09T10:20:54.396Z’，转化为北京时间需要额外增加八个时区，\r\n        //我们需要取字符串前19位，然后把‘T’替换为空格，即是我们需要的时间格式。\r\n    }\r\n}\r\n\r\nexport const api = Tools.api.bind(Tools);\r\n//host 请求地址\r\nexport const host = 'http://182.92.64.245/tp5/public/index.php/index/index/';\r\nexport const time = Tools.time.bind(Tools);","import React, { useState, useEffect } from 'react';\r\nimport {Tabs} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {host,api} from '../../until';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst IndexTab = props => {\r\n    const callback = (key)=>{\r\n        console.log(key);\r\n    }\r\n\r\n    //定义渲染需要使用的数据\r\n    const [news,setNews] =useState([]);\r\n     //组件加载时调用 相当于componsetNewsentDidMount \r\n     useEffect(()=>{\r\n        //动态获取数据 根据传入得type\r\n        let wenzhangType = props.type;\r\n        /**\r\n         * zyx\r\n         * 2020/6/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                showData(res);\r\n            }\r\n        });    \r\n    },[])\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/9\r\n     * 数据处理函数\r\n     */\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                uniquekey: data[i].id,\r\n                title: data[i].title,\r\n            });\r\n        }\r\n        //调用news的change方法\r\n        setNews(listData)\r\n    }\r\n\r\n    const List = ()=>{\r\n        console.log(news);\r\n       \r\n        let newsList=news.map((newsItem, index) => (\r\n            <li key={index}>\r\n                 <Link to={`details/${newsItem.uniquekey}`} target='_blank'>\r\n                     {newsItem.title}\r\n                 </Link>\r\n             </li>\r\n        ));\r\n        return(\r\n            <ul>\r\n                {newsList}\r\n            </ul>\r\n        )\r\n    }\r\n    return (\r\n       <div>\r\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                <TabPane tab=\"热点文章\" key=\"1\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"热点帖子\" key=\"2\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"国际新闻\" key=\"3\">\r\n                    <List />\r\n                </TabPane>\r\n                <TabPane tab=\"国内新闻\" key=\"4\">\r\n                    <List />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexTab;","import React, { useState, useEffect } from 'react';\r\nimport {Card} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//引入封装的fetch方法和host地址\r\nimport {api,host} from '../../until';\r\nimport './index.scss';\r\n\r\n//外层组件 处理数据\r\nconst ImgBlockTypeOne = props => {\r\n\r\n     //定义需要渲染使用state\r\n     const [news,setNews] = useState('');\r\n\r\n     //组件加载时调用 相当于componentDidMount \r\n    useEffect(()=>{\r\n        //动态获取数据 根据传入得type\r\n        let wenzhangType = props.type;\r\n        /**\r\n         * zyx\r\n         * 2020/6/19\r\n         * 拿到数据\r\n         */\r\n        api({\r\n            url:host + 'newsSelectContentByType',\r\n            args: {\r\n                type:1,\r\n                wenzhangType,\r\n            },\r\n            callback: (res) => {\r\n                console.log(res);\r\n                showData(res);\r\n            }\r\n        });    \r\n    },[])\r\n\r\n    /**\r\n     * zyx\r\n     * 2020/6/9\r\n     * 数据处理函数\r\n     */\r\n    const showData = (data)=>{\r\n        let listData = [];\r\n        for (let i = 0; i < props.count; i++) {\r\n            let img = JSON.parse(data[i].img);\r\n            listData.push({\r\n                uniquekey: data[i].id,\r\n                thumbnail_pic_s: img[0],\r\n                title: data[i].title,\r\n                author_name: data[i].name,\r\n            });\r\n        }\r\n\r\n        //调用news的change方法\r\n        setNews(listData)\r\n    }\r\n \r\n    //根据数据渲染页面\r\n    const newsImage = ()=>{\r\n        if(news.length){\r\n            let newsList = '';\r\n            if(props.componentType == 1){\r\n                newsList=news.map((newsItem, index) => (\r\n                    <div key={index} className='image_news_item' style={{width:props.imageWidth}}>\r\n                        <Link to={`details/${newsItem.uniquekey}`} target='_blank'>\r\n                            <img alt=\"newsItem.title\" src={newsItem.thumbnail_pic_s} width={props.imageWidth}/>\r\n                            <h3>{newsItem.title}</h3>\r\n                            <p>{newsItem.author_name}</p>\r\n                        </Link>\r\n                    </div>\r\n                ));\r\n\r\n            }else if (props.componentType == 2){\r\n                newsList=news.map((newsItem,index)=>(\r\n                    <Link to={`details/${newsItem.uniquekey}`} target='_blank' key={index}>\r\n                        <section  className='imageSingle_sec' style={{width:props.width}}>\r\n                            <div className='imageSingle_left' style={{width:props.ImageWidth}}>\r\n                                <img style={{width:props.ImageWidth}} src={newsItem.thumbnail_pic_s} alt={newsItem.title}/>\r\n                            </div>\r\n        \r\n                            <div className='imageSingle_right'>\r\n                                <p>{newsItem.title}</p>\r\n                                <span className='realType' >{newsItem.realtype}</span>\r\n                                <span>{newsItem.author_name}</span>\r\n                            </div>\r\n                        </section>\r\n                    </Link>\r\n                ));\r\n            }\r\n             \r\n            return(\r\n                <Card className={props.componentType == '2' ? 'imageSingleCard':'image_card'} title={props.cartTitle} bordered={true} style={{width:props.width,marginTop:'10px'}}>\r\n                    <div className='image_news_container' style={{width:props.width,justifyContent:props.justifyContent}}>\r\n                        {newsList}\r\n                    </div>\r\n                </Card>\r\n            )\r\n        }else{\r\n            return '正在加载'\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className='pc_news_imgblock'>\r\n            {newsImage()}\r\n        </div>\r\n    )\r\n}\r\nexport default ImgBlockTypeOne;","import React, { useState, useEffect } from 'react';\r\nimport {Carousel} from 'antd';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexLeft = props => {\r\n    \r\n    return (\r\n       <div>\r\n           <Carousel autoplay>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news1.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news2.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news3.jpg\"/></div>\r\n                <div><img src=\"https://zyx-news.oss-cn-hangzhou.aliyuncs.com/news4.jpg\"/></div>\r\n            </Carousel>\r\n            <ImgBlockTypeOne  count={10} type='4' width='100%' imageWidth='112px'\r\n             cartTitle='美国大暴动' justifyContent='space-around' componentType='1'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexLeft;","import React, { useState, useEffect } from 'react';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexBottom = props => {\r\n    \r\n    return (\r\n       <div>\r\n            <ImgBlockTypeOne count={12} type='2' width='100%' imageWidth='112px' cartTitle='R.I.P Kobe'\r\n            justifyContent='space-start' componentType='1'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexBottom;","import React, { useState, useEffect } from 'react';\r\nimport ImgBlockTypeOne from '../../component/ImgBlockTypeOne/index';\r\nconst IndexRight = props => {\r\n    \r\n    return (\r\n       <div>\r\n            <ImgBlockTypeOne width='100%' ImageWidth='100px' type='3' count={5} cartTitle='海贼王' componentType='2'/>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexRight;","/* global getCLodop:false */ \r\n/* global CLODOP:false */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Row, Col} from 'antd';\r\n//新闻列表组件\r\nimport IndexTab from './IndexTab/index';\r\n//主页左边内容 轮播图和新闻图文列表\r\nimport IndexLeft from './IndexLeft/index'\r\n//主页底部新闻列表\r\nimport IndexBottom from './IndexBottom/index';\r\n//主页右侧新闻列表\r\nimport IndexRight from './IndexRight/index';\r\nimport './index.scss';\r\n\r\nconst Index = props => {\r\n\r\n    useEffect(()=>{\r\n        //测试全局变量\r\n        /* eslint-disable no-undef */\r\n        console.log('111');\r\n        console.log(process.env);\r\n        console.log(process.defineEnv);\r\n        /* eslint-disable no-new */\r\n    },[])\r\n    \r\n    return (\r\n        <div className='index'>\r\n        <Row>\r\n            <Col span={2}/>\r\n            <Col span={21}>\r\n                <Row className='top_news'>\r\n                    <Col span={8}>\r\n                        <div className='top_left top'>\r\n                        {/* 主页左边内容 轮播图和新闻图文列表 */}\r\n                            <IndexLeft />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={7}>\r\n                        <div className='top_center top'>\r\n                            {/* 中间tab组件 */}\r\n                            <IndexTab />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <div className='top_right top'>\r\n                            {/* 主页右侧新闻列表 */}\r\n                            <IndexRight />\r\n                        </div>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    <div className='bottom'>\r\n                        {/* 主页底部新闻列表 */}\r\n                        <IndexBottom />     \r\n                    </div>\r\n                </Row>\r\n\r\n            </Col>\r\n            <Col span={4}/>\r\n        </Row>\r\n        </div>\r\n    );\r\n}\r\nexport default Index;","import React, { useState, useEffect } from 'react';\r\nimport {Tabs} from 'antd';\r\nimport './index.scss';\r\nconst { TabPane } = Tabs;\r\n\r\nconst Posting = props => {\r\n\r\n    const callback = (key)=>{\r\n        console.log(key);\r\n    }\r\n    return (\r\n       <div>\r\n           <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                <TabPane tab=\"Tab 1\" key=\"1\">\r\n                    Content of Tab Pane 1\r\n                </TabPane>\r\n                <TabPane tab=\"Tab 2\" key=\"2\">\r\n                    Content of Tab Pane 2\r\n                </TabPane>\r\n                <TabPane tab=\"Tab 3\" key=\"3\">\r\n                    Content of Tab Pane 3\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\nexport default Posting;","//布局\r\nimport BaseLayout from './container/BaseLayout/index';\r\n//主页\r\nimport Index from './container/Index/index';\r\n//帖子页面\r\nimport Posting from './container/Posting/index';\r\n//配置路由  通过一个数组\r\nvar Routes = [   \r\n    {   \r\n        path: '/',\r\n        component: BaseLayout,\r\n        children: [\r\n            {\r\n                path: '/',\r\n                exact: true,\r\n                component: Index\r\n            },\r\n            {\r\n                path: '/index',\r\n                exact: true,\r\n                component: Index\r\n            },\r\n            {\r\n                path: '/posting',\r\n                exact: true,\r\n                component: Posting\r\n            },\r\n        ]\r\n     },\r\n]\r\n//把路由配置暴露出去\r\nexport default Routes","import React from 'react';\n//配置hashRouter 使用独立的router文件\nimport { createHashHistory } from 'history';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n//引入配置的routes\nimport Routes from './routes';\n\n//创建路由history\nconst history = createHashHistory();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        {/* 通过renderRoutes解析routes */}\n        {renderRoutes(Routes)}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}